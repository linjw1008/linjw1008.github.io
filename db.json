{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"source/robots.txt","path":"robots.txt","modified":1,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/authorPhoto.jpg","path":"images/authorPhoto.jpg","modified":1,"renderable":1},{"_id":"themes/next/source/images/authorPhoto1.jpg","path":"images/authorPhoto1.jpg","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/alipay.jpg","path":"images/alipay.jpg","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"themes/next/.bowerrc","hash":"334da94ca6f024d60d012cc26ea655681e724ad8","modified":1551454111678},{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1551454111678},{"_id":"themes/next/.gitattributes","hash":"8454b9313cb1a97b63fb87e2d29daee497ce6249","modified":1551454111678},{"_id":"themes/next/.gitignore","hash":"ee0b13c268cc8695d3883a5da84930af02d4ed08","modified":1551454111681},{"_id":"themes/next/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1551454111682},{"_id":"themes/next/.javascript_ignore","hash":"cd250ad74ca22bd2c054476456a73d9687f05f87","modified":1551454111682},{"_id":"themes/next/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1551454111683},{"_id":"themes/next/.stylintrc","hash":"3b7f9785e9ad0dab764e1c535b40df02f4ff5fd6","modified":1551454111683},{"_id":"themes/next/.travis.yml","hash":"6674fbdfe0d0c03b8a04527ffb8ab66a94253acd","modified":1551454111684},{"_id":"themes/next/LICENSE","hash":"ec44503d7e617144909e54533754f0147845f0c5","modified":1551454111684},{"_id":"themes/next/README.cn.md","hash":"23e92a2599725db2f8dbd524fbef2087c6d11c7b","modified":1551454111685},{"_id":"themes/next/README.md","hash":"50abff86ffe4113051a409c1ed9261195d2aead0","modified":1551454111685},{"_id":"themes/next/_config.yml","hash":"25a32e3523680ce5b63dc095a3c5ee4531132f5c","modified":1551617560258},{"_id":"themes/next/bower.json","hash":"486ebd72068848c97def75f36b71cbec9bb359c5","modified":1551454111686},{"_id":"themes/next/gulpfile.coffee","hash":"412defab3d93d404b7c26aaa0279e2e586e97454","modified":1551454111687},{"_id":"themes/next/package.json","hash":"3963ad558a24c78a3fd4ef23cf5f73f421854627","modified":1551454111737},{"_id":"source/CNAME","hash":"a53bb00744b78b0ce3dced13e486c97aa796f756","modified":1551493297164},{"_id":"source/robots.txt","hash":"ceec6acf88df902b0f23383b9d3babfb07f9b341","modified":1553158949940},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1551454111647},{"_id":"themes/next/.git/config","hash":"8e94cc015a498d35202e9fd57e44b3c51e1e5634","modified":1551454111655},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1551453028688},{"_id":"themes/next/.git/index","hash":"1b6e5ab38ebac53a6420a05871037a6918a9faa9","modified":1551491250549},{"_id":"themes/next/.git/packed-refs","hash":"69237944e31c16fe545d1f47b0b1e5b1d99660da","modified":1551454111638},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5adfad3ef1b870063e621bc0838268eb2c7c697a","modified":1551454111679},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"a0a82dbfabdef9a9d7c17a08ceebfb4052d98d81","modified":1551454111680},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"1228506a940114288d61812bfe60c045a0abeac1","modified":1551454111680},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1551454111681},{"_id":"themes/next/languages/de.yml","hash":"fd02d9c2035798d5dc7c1a96b4c3e24b05b31a47","modified":1551454111687},{"_id":"themes/next/languages/default.yml","hash":"b3bcd8934327448a43d9bfada5dd11b1b8c1402e","modified":1551454111688},{"_id":"themes/next/languages/en.yml","hash":"2f4b4776ca1a08cc266a19afb0d1350a3926f42c","modified":1551454111688},{"_id":"themes/next/languages/fr-FR.yml","hash":"efeeb55d5c4add54ad59a612fc0630ee1300388c","modified":1551454111689},{"_id":"themes/next/languages/id.yml","hash":"dccae33e2a5b3c9f11c0e05ec4a7201af1b25745","modified":1551454111689},{"_id":"themes/next/languages/it.yml","hash":"a215d016146b1bd92cef046042081cbe0c7f976f","modified":1551454111690},{"_id":"themes/next/languages/ja.yml","hash":"37f954e47a3bc669620ca559e3edb3b0072a4be5","modified":1551454111691},{"_id":"themes/next/languages/ko.yml","hash":"dc8f3e8c64eb7c4bb2385025b3006b8efec8b31d","modified":1551454111691},{"_id":"themes/next/languages/nl-NL.yml","hash":"213e7a002b82fb265f69dabafbbc382cfd460030","modified":1551454111692},{"_id":"themes/next/languages/pt-BR.yml","hash":"568d494a1f37726a5375b11452a45c71c3e2852d","modified":1551454111692},{"_id":"themes/next/languages/pt.yml","hash":"2efcd240c66ab1a122f061505ca0fb1e8819877b","modified":1551454111692},{"_id":"themes/next/languages/ru.yml","hash":"e33ee44e80f82e329900fc41eb0bb6823397a4d6","modified":1551454111693},{"_id":"themes/next/languages/vi.yml","hash":"a9b89ebd3e5933033d1386c7c56b66c44aca299a","modified":1551454111693},{"_id":"themes/next/languages/zh-Hans.yml","hash":"66b9b42f143c3cb2f782a94abd4c4cbd5fd7f55f","modified":1551454111694},{"_id":"themes/next/languages/zh-hk.yml","hash":"fe0d45807d015082049f05b54714988c244888da","modified":1551454111694},{"_id":"themes/next/languages/zh-tw.yml","hash":"432463b481e105073accda16c3e590e54c8e7b74","modified":1551454111695},{"_id":"themes/next/layout/_layout.swig","hash":"2164570bb05db11ee4bcfbbb5d183a759afe9d07","modified":1551454111697},{"_id":"themes/next/layout/archive.swig","hash":"9a2c14874a75c7085d2bada5e39201d3fc4fd2b4","modified":1551454111734},{"_id":"themes/next/layout/category.swig","hash":"3cbb3f72429647411f9e85f2544bdf0e3ad2e6b2","modified":1551454111735},{"_id":"themes/next/layout/index.swig","hash":"555a357ecf17128db4e29346c92bb6298e66547a","modified":1551454111735},{"_id":"themes/next/layout/page.swig","hash":"e8fcaa641d46930237675d2ad4b56964d9e262e9","modified":1551454111736},{"_id":"themes/next/layout/post.swig","hash":"7a6ce102ca82c3a80f776e555dddae1a9981e1ed","modified":1551454111736},{"_id":"themes/next/layout/tag.swig","hash":"34e1c016cbdf94a31f9c5d494854ff46b2a182e9","modified":1551454111737},{"_id":"themes/next/layout/schedule.swig","hash":"87ad6055df01fa2e63e51887d34a2d8f0fbd2f5a","modified":1551454111736},{"_id":"themes/next/scripts/merge-configs.js","hash":"38d86aab4fc12fb741ae52099be475196b9db972","modified":1551454111738},{"_id":"themes/next/scripts/merge.js","hash":"39b84b937b2a9608b94e5872349a47200e1800ff","modified":1551454111739},{"_id":"themes/next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1551454111924},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1551454111924},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1551454111924},{"_id":"source/404/index.md","hash":"0833bd9cc5e505a5692ba5315edc50e7074fa469","modified":1551503909873},{"_id":"source/_drafts/Matlab-Simulink模型代数环错误防止与解决.md","hash":"7cee24c7370efd8b36a6b451f4017d35e1197433","modified":1551847785832},{"_id":"source/_drafts/Matlab-Simulink模型提高运行速度的方法.md","hash":"5e955c65a58b2af61676b0d6ee9a1db645525fca","modified":1551848140961},{"_id":"source/_posts/2019-03-02-基于CHNN的旅行商问题.md","hash":"0b0f91ff30bc322e4e339ae36b53ac4a82150015","modified":1551625024889},{"_id":"source/_posts/2019-03-21-Keil开发环境build报错解决方法A1067E.md","hash":"639db0be4d1cc80b4454db8924edf22338fa024c","modified":1553157399940},{"_id":"source/_posts/2021-01-25-并查集代码实现-详细注释（C-）.md","hash":"abf9c19e31f9184c80de967c6d52d854182fd498","modified":1611649827211},{"_id":"source/about/index.md","hash":"dd43c4d229c79e83ebfd210f829b881ea1c6930c","modified":1611581711265},{"_id":"source/categories/index.md","hash":"c4a1d76d83d8497de495b373ebf00fc7e89afd32","modified":1551497138068},{"_id":"source/tags/index.md","hash":"26a87904763f2332bd603451b6f225b806b3aa0c","modified":1551503161761},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1551454111800},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1551453028689},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1551453028690},{"_id":"themes/next/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1551453028691},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1551453028692},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1551453028692},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"33729ad4ce51acda35094e581e4088f3167a0af8","modified":1551453028693},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1551453028694},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1551453028695},{"_id":"themes/next/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1551453028696},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1551453028696},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1551453028697},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1551453028698},{"_id":"themes/next/.git/logs/HEAD","hash":"89816d696535ac79a5e23dda19ea8c790116d088","modified":1551454111650},{"_id":"themes/next/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1551454111696},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1551454111696},{"_id":"themes/next/layout/_macro/passage-end-tag.swig","hash":"a69a4fdb4d6d97fc6ae603d8a76f86ba915c86fa","modified":1551511910835},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"8c56dd26157cbc580ae41d97ac34b90ab48ced3f","modified":1551454111697},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"f83befdc740beb8dc88805efd7fbb0fef9ed19be","modified":1551454111698},{"_id":"themes/next/layout/_macro/post.swig","hash":"c012fc47807f75c19b79ef0a70ba0467681f4897","modified":1551511492491},{"_id":"themes/next/layout/_macro/reward.swig","hash":"357d86ec9586705bfbb2c40a8c7d247a407db21a","modified":1551454111699},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"9c7343fd470e0943ebd75f227a083a980816290b","modified":1551454111699},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"e2e4eae391476da994045ed4c7faf5e05aca2cd7","modified":1551454111700},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4adc65a602d1276615da3b887dcbf2ac68e7382b","modified":1551454111700},{"_id":"themes/next/layout/_partials/footer.swig","hash":"26e93336dc57a39590ba8dc80564a1d2ad5ff93b","modified":1551454111701},{"_id":"themes/next/layout/_partials/head.swig","hash":"ff62fe0fbc90b78c2d152ed8f9fbaee8fa789ac6","modified":1553159435295},{"_id":"themes/next/layout/_partials/header.swig","hash":"c54b32263bc8d75918688fb21f795103b3f57f03","modified":1551454111703},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"77c61e0baea3544df361b7338c3cd13dc84dde22","modified":1551454111703},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1551454111705},{"_id":"themes/next/layout/_partials/search.swig","hash":"b4ebe4a52a3b51efe549dd1cdee846103664f5eb","modified":1551454111706},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1551454111710},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1551454111711},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"9be624634703be496a5d2535228bc568a8373af9","modified":1551454111714},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1551454111727},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"8301c9600bb3e47f7fb98b0e0332ef3c51bb1688","modified":1551454111728},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"a0bd3388587fd943baae0d84ca779a707fbcad89","modified":1551454111728},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"fa882641da3bd83d9a58a8a97f9d4c62a9ee7b5c","modified":1551454111729},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"554ec568e9d2c71e4a624a8de3cb5929050811d6","modified":1551454111729},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"db15d7e1552aa2d2386a6b8a33b3b3a40bf9e43d","modified":1551454111730},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"9a188938d46931d5f3882a140aa1c48b3a893f0c","modified":1551454111730},{"_id":"themes/next/scripts/tags/button.js","hash":"eddbb612c15ac27faf11c59c019ce188f33dec2c","modified":1551454111740},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1551454111740},{"_id":"themes/next/scripts/tags/exturl.js","hash":"5022c0ba9f1d13192677cf1fd66005c57c3d0f53","modified":1551454111741},{"_id":"themes/next/scripts/tags/full-image.js","hash":"c9f833158c66bd72f627a0559cf96550e867aa72","modified":1551454111741},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1551454111742},{"_id":"themes/next/scripts/tags/label.js","hash":"6f00952d70aadece844ce7fd27adc52816cc7374","modified":1551454111742},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"bcba2ff25cd7850ce6da322d8bd85a8dd00b5ceb","modified":1551454111743},{"_id":"themes/next/scripts/tags/note.js","hash":"f7eae135f35cdab23728e9d0d88b76e00715faa0","modified":1551454111743},{"_id":"themes/next/scripts/tags/tabs.js","hash":"aa7fc94a5ec27737458d9fe1a75c0db7593352fd","modified":1551454111744},{"_id":"themes/next/source/css/main.styl","hash":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1551454111799},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1551454111801},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1551454111801},{"_id":"themes/next/source/images/authorPhoto.jpg","hash":"6ce3bf3c14c8aed280666d2fb32d883e1d8d868a","modified":1551503399554},{"_id":"themes/next/source/images/authorPhoto1.jpg","hash":"af8929b0f280d830b5bb8323a6f8c0fa83949d59","modified":1551503363927},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1551454111801},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1551454111802},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1551454111802},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1551454111826},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1551454111826},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1551454111827},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1551454111827},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1551454111828},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1551454111828},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1551454111828},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1551454111829},{"_id":"themes/next/source/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1551454111829},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1551454111830},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1551454111830},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1551454111830},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1551454111831},{"_id":"source/_posts/2019-03-02-基于CHNN的旅行商问题/circuit.png","hash":"d2df9093c28bf032086bf244eaba84ff0b7ffde4","modified":1551623129756},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1551454111713},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1551454111713},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1551454111781},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1551454111781},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1551454111782},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1551454111797},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1551454111799},{"_id":"themes/next/source/images/alipay.jpg","hash":"b09fd6250ec2635e51642cecb19dd6f08c33ed4b","modified":1551498602107},{"_id":"themes/next/.git/refs/heads/master","hash":"7999da428ebb87e5a2b27315d8d5123c1ccdfaa5","modified":1551454111650},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1551454111702},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1551454111702},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"b2f0d247b213e4cf8de47af6a304d98070cc7256","modified":1551454111707},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1551454111707},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1551454111707},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"9e3d133ac5bcc6cb51702c83b2611a49811abad1","modified":1551454111708},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"d9e2d9282f9be6e04eae105964abb81e512bffed","modified":1551454111709},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1551454111709},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"0a9cdd6958395fcdffc80ab60f0c6301b63664a5","modified":1551454111710},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1551454111712},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1551454111713},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1551454111714},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"ff947f3561b229bc528cb1837d4ca19612219411","modified":1551454111715},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"71397a5823e8ec8aad3b68aace13150623b3e19d","modified":1551454111716},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"753d262911c27baf663fcaf199267133528656af","modified":1551454111716},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"7b11eac3a0685fa1ab2ab6ecff60afc4f15f0d16","modified":1551454111717},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"a10b7f19d7b5725527514622899df413a34a89db","modified":1551454111717},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"7d94845f96197d9d84a405fa5d4ede75fb81b225","modified":1551454111718},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"ccc443b22bd4f8c7ac4145664686c756395b90e0","modified":1551454111718},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"b1e13df83fb2b1d5d513b30b7aa6158b0837daab","modified":1551454111719},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"45f3f629c2aacc381095750e1c8649041a71a84b","modified":1551454111719},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"e6d10ee4fb70b3ae1cd37e9e36e000306734aa2e","modified":1551454111719},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"5a8027328f060f965b3014060bebec1d7cf149c1","modified":1551454111720},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1551454111720},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"f9a1647a8f1866deeb94052d1f87a5df99cb1e70","modified":1551454111721},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"4c501ea0b9c494181eb3c607c5526a5754e7fbd8","modified":1551454111722},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b83a51bbe0f1e2ded9819070840b0ea145f003a6","modified":1551454111722},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"1600f340e0225361580c44890568dc07dbcf2c89","modified":1551454111722},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"4dcc3213c033994d342d02b800b6229295433d30","modified":1551454111723},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"af7f3e43cbdc4f88c13f101f0f341af96ace3383","modified":1551454111723},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"493bd5999a1061b981922be92d8277a0f9152447","modified":1551454111724},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"9246162d4bc7e949ce1d12d135cbbaf5dc3024ec","modified":1551454111726},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"4050553d44ba1396174161c9a6bb0f89fa779eca","modified":1551454111726},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"7e65ff8fe586cd655b0e9d1ad2912663ff9bd36c","modified":1551454111727},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"d8c98938719284fa06492c114d99a1904652a555","modified":1551454111734},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"34599633658f3b0ffb487728b7766e1c7b551f5a","modified":1551454111732},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"93479642fd076a1257fecc25fcf5d20ccdefe509","modified":1551454111733},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1551454111733},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"3403fdd8efde1a0afd11ae8a5a97673f5903087f","modified":1551454111780},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"07f7da320689f828f6e36a6123807964a45157a0","modified":1551454111781},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"7896c3ee107e1a8b9108b6019f1c070600a1e8cc","modified":1551454111782},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"0e55cbd93852dc3f8ccb44df74d35d9918f847e0","modified":1551454111782},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"a25408534f8fe6e321db4bbf9dd03335d648fe17","modified":1551454111797},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"4069f918ccc312da86db6c51205fc6c6eaabb116","modified":1551454111798},{"_id":"themes/next/source/css/_variables/base.styl","hash":"b1f6ea881a4938a54603d68282b0f8efb4d7915d","modified":1551454111798},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"cb431b54ba9c692165a1f5a12e4c564a560f8058","modified":1551454111833},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"0289031200c3d4c2bdd801ee10fff13bb2c353e4","modified":1551454111833},{"_id":"themes/next/source/js/src/exturl.js","hash":"a2a0f0de07e46211f74942a468f42ee270aa555c","modified":1551454111834},{"_id":"themes/next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1551454111832},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1551454111834},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"1512c751d219577d338ac0780fb2bbd9075d5298","modified":1551454111835},{"_id":"themes/next/source/js/src/motion.js","hash":"885176ed51d468f662fbf0fc09611f45c7e5a3b1","modified":1551454111837},{"_id":"themes/next/source/js/src/post-details.js","hash":"93a18271b4123dd8f94f09d1439b47c3c19a8712","modified":1551454111837},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"02cf91514e41200bc9df5d8bdbeb58575ec06074","modified":1551454111838},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1551454111839},{"_id":"themes/next/source/js/src/utils.js","hash":"b3e9eca64aba59403334f3fa821f100d98d40337","modified":1551454111839},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"58e7dd5947817d9fc30770712fc39b2f52230d1e","modified":1551454111797},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1551454111848},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1551454111852},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"b02737510e9b89aeed6b54f89f602a9c24b06ff2","modified":1551454111852},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"9be892a4e14e0da18ff9cb962c9ef71f163b1b22","modified":1551454111853},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"672d3b5767e0eacd83bb41b188c913f2cf754793","modified":1551454111853},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1551454111862},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1551454111864},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1551454111863},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1551454111897},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1551454111863},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1551454111899},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1551454111899},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1551454111900},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1551454111900},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1551454111901},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1551454111901},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"b4aefc910578d76b267e86dfffdd5121c8db9aec","modified":1551454111866},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1551454111867},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1551454111867},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1551454111868},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1551454111868},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"14264a210bf94232d58d7599ea2ba93bfa4fb458","modified":1551454111902},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"e33aa8fa48b6639d8d8b937d13261597dd473b3a","modified":1551454111903},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"2ce5f3bf15c523b9bfc97720d8884bb22602a454","modified":1551454111903},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1551454111904},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1551454111905},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1551454111905},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1551454111906},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1551454111905},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1551454111906},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1551454111907},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1551454111907},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1551454111909},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1551454111908},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1551454111909},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1551454111908},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1551454111910},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"46a50b91c98b639c9a2b9265c5a1e66a5c656881","modified":1551454111912},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"8aaa675f577d5501f5f22d5ccb07c2b76310b690","modified":1551454111910},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"2d9a9f38c493fdf7c0b833bb9184b6a1645c11b2","modified":1551454111911},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"8148492dd49aa876d32bb7d5b728d3f5bf6f5074","modified":1551454111912},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1551454111919},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1551454111919},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1551454111922},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1551454111923},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1551454111922},{"_id":"themes/next/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1551454111898},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"89816d696535ac79a5e23dda19ea8c790116d088","modified":1551454111652},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1551454111645},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"218cc936ba3518a3591b2c9eda46bc701edf7710","modified":1551454111731},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"2530de0f3125a912756f6c0e9090cd012134a4c5","modified":1551454111732},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"12662536c7a07fff548abe94171f34b768dd610f","modified":1551454111776},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"8f86f694c0749a18ab3ad6f6df75466ca137a4bc","modified":1551454111745},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"237d185ac62ec9877e300947fa0109c44fb8db19","modified":1551454111746},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"7ad4081466b397e2a6204141bb7768b7c01bd93c","modified":1551454111747},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"8b32928686c327151e13d3ab100157f9a03cd59f","modified":1551454111746},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1551454111747},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"4f2801fc4cf3f31bf2069f41db8c6ce0e3da9e39","modified":1551454111755},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1551454111767},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"24ee4b356ff55fc6e58f26a929fa07750002cf29","modified":1551454111777},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"1da5c800d025345f212a3bf1be035060f4e5e6ed","modified":1551454111778},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"91ca75492cd51f2553f4d294ed2f48239fcd55eb","modified":1551454111778},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1551454111778},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"ea9069645696f86c5df64208490876fe150c8cae","modified":1551454111779},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1551454111785},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"60fa84aa7731760f05f52dd7d8f79b5f74ac478d","modified":1551454111784},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1551454111785},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1551454111785},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1551454111786},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a17e2b871a335f290afb392a08f94fd35f59c715","modified":1551454111779},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"9c99034f8e00d47e978b3959f51eb4a9ded0fcc8","modified":1551454111786},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1551454111787},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9b913b73d31d21f057f97115ffab93cfa578b884","modified":1551454111789},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1551454111792},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"e695e58f714129ca292c2e54cd62c251aca7f7fe","modified":1551454111792},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1551454111792},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1551454111793},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"bce344d3a665b4c55230d2a91eac2ad16d6f32fd","modified":1551454111794},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"416988dca389e6e2fdfa51fa7f4ee07eb53f82fb","modified":1551454111795},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"4642e30010af8b2b037f5b43146b10a934941958","modified":1551454111795},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1551454111795},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"31127dcbf4c7b4ada53ffbf1638b5fe325b7cbc0","modified":1551454111791},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"ad2dcedf393ed1f3f5afd2508d24969c916d02fc","modified":1551454111796},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"86197902dfd3bededba10ba62b8f9f22e0420bde","modified":1551454111796},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"6c26cdb36687d4f0a11dabf5290a909c3506be5c","modified":1551454111844},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1551454111854},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1551454111854},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1551454111855},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1551454111855},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1551454111856},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1551454111857},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"6d586bfcfb7ae48f1b12f76eec82d3ad31947501","modified":1551454111846},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1551454111861},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1551454111860},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1551454111865},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1551454111865},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1551454111862},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"3655f1fdf1e584c4d8e8d39026093ca306a5a341","modified":1551454111869},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"88af80502c44cd52ca81ffe7dc7276b7eccb06cf","modified":1551454111870},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1551454111870},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1551454111917},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1551454111918},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"f1d0b5d7af32c423eaa8bb93ab6a0b45655645dc","modified":1551454111838},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"16b03db23a52623348f37c04544f2792032c1fb6","modified":1551454111846},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1551454111883},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1551454111896},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1551454111921},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"89816d696535ac79a5e23dda19ea8c790116d088","modified":1551454111645},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"b6f3a06a94a6ee5470c956663164d58eda818a64","modified":1551454111753},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1551454111751},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"f9760ecf186954cee3ba4a149be334e9ba296b89","modified":1551454111754},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1551454111753},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"8cf318644acc8b4978537c263290363e21c7f5af","modified":1551454111754},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"62fbbd32cf5a99ae550c45c763a2c4813a138d01","modified":1551454111756},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"875cbe88d5c7f6248990e2beb97c9828920e7e24","modified":1551454111756},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"caf263d1928496688c0e1419801eafd7e6919ce5","modified":1551454111756},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1551454111757},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"a6c6eb8adba0a090ad1f4b9124e866887f20d10d","modified":1551454111757},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1551454111758},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"d0d7a5c90d62b685520d2b47fea8ba6019ff5402","modified":1551454111758},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"27deb3d3a243d30022055dac7dad851024099a8b","modified":1551454111759},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"ca88ea6999a61fb905eb6e72eba5f92d4ee31e6e","modified":1551454111759},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"b2495ae5e04dcca610aacadc47881d9e716cd440","modified":1551454111760},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1551454111760},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"ccb34c52be8adba5996c6b94f9e723bd07d34c16","modified":1551454111761},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1551454111761},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"7968343e41f8b94b318c36289dff1196c3eb1791","modified":1551454111761},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"89d6c3b697efc63de42afd2e89194b1be14152af","modified":1551454111762},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1551454111749},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1551454111749},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"1a0d059799a298fe17c49a44298d32cebde93785","modified":1551454111749},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1551454111750},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1551454111750},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"39f04c4c7237a4e10acd3002331992b79945d241","modified":1551454111763},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"f7ffd8508438ee4f18d99b3e092892c8ac845a42","modified":1551503252412},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"8dd9a1c6f4f6baa00c2cf01837e7617120cf9660","modified":1551454111763},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"11c22f0fb3f6beb13e5a425ec064a4ff974c13b7","modified":1551454111764},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1551454111764},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1551454111765},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"c8fe49a4bc014c24dead05b782a7082411a4abc5","modified":1551454111765},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"a1521d48bb06d8d703753f52a198baa197af7da2","modified":1551454111766},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"5ef6343835f484a2c0770bd1eb9cc443609e4c39","modified":1551454111766},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1551454111766},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1551454111767},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"a3bdd71237afc112b2aa255f278cab6baeb25351","modified":1551454111768},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1551454111769},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"f825da191816eef69ea8efb498a7f756d5ebb498","modified":1551454111768},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"2ab1322fe52ab5aafd49e68f5bd890e8380ee927","modified":1551454111769},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"b7076e58d647265ee0ad2b461fe8ce72c9373bc5","modified":1551454111770},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"9a409b798decdefdaf7a23f0b11004a8c27e82f3","modified":1551454111770},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"154a87a32d2fead480d5e909c37f6c476671c5e6","modified":1551454111771},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"b80604868e4f5cf20fccafd7ee415c20c804f700","modified":1551454111771},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"bba4f3bdb7517cd85376df3e1209b570c0548c69","modified":1551454111772},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1551454111772},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"a6e7d698702c2e383dde3fde2abde27951679084","modified":1551454111773},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"7fe4d4d656e86276c17cb4e48a560cb6a4def703","modified":1551454111752},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"874278147115601d2abf15987f5f7a84ada1ac6b","modified":1551454111773},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1551454111773},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"10599e16414a8b7a76c4e79e6617b5fe3d4d1adf","modified":1551454111774},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1551454111774},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"16087276945fa038f199692e3eabb1c52b8ea633","modified":1551454111775},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"28825ae15fa20ae3942cdaa7bcc1f3523ce59acc","modified":1551454111775},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"9c8196394a89dfa40b87bf0019e80144365a9c93","modified":1551454111776},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1551454111790},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"9f73c4696f0907aa451a855444f88fc0698fa472","modified":1551454111748},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1551454111793},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1551454111754},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1551454111790},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1551454111841},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1551454111842},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1551454111842},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1551454111843},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1551454111857},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1551454111858},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1551454111858},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1551454111859},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1551454111859},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1551454111860},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1551454111843},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"50450d9fdc8a2b2be8cfca51e3e1a01ffd636c0b","modified":1551454111751},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1551454111873},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1551454111882},{"_id":"themes/next/.git/objects/pack/pack-17a4bee8f29540da57cd464efc36b18a63c11091.idx","hash":"2651a8f782fa1f6b3f4e746be5325bc53abc9e00","modified":1551454111502},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"4ac683b2bc8531c84d98f51b86957be0e6f830f3","modified":1551454111845},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1551454111875},{"_id":"themes/next/source/lib/three/three.min.js","hash":"26273b1cb4914850a89529b48091dc584f2c57b8","modified":1551454111916},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"90a1b22129efc172e2dfcceeeb76bff58bc3192f","modified":1551454111851},{"_id":"source/_posts/2019-03-02-基于CHNN的旅行商问题/result.bmp","hash":"34700c2cae010e925d5cafde82aa43858b0292c7","modified":1551622917339},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1551454111879},{"_id":"themes/next/.git/objects/pack/pack-17a4bee8f29540da57cd464efc36b18a63c11091.pack","hash":"31689539b2c20f31c6504fe7cc989966fb2b4e03","modified":1551454111547}],"Category":[{"name":"学习笔记","_id":"ckkdqtlpg0006e8ulx3eyql9d"}],"Data":[],"Page":[{"title":"","date":"2019-03-02T05:14:51.000Z","comments":0,"_content":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n  <script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\"\n          charset=\"utf-8\" homePageUrl=\"/\"\n          homePageName=\"回到我的主页\">\n  </script>\n  <script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n  <script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n</body>\n</html>","source":"404/index.md","raw":"---\ntitle: #404 NOT Found: 该页无法显示\ndate: 2019-03-02 13:14:51\ncomments: false\npermalink: /404\n---\n<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n  <script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\"\n          charset=\"utf-8\" homePageUrl=\"/\"\n          homePageName=\"回到我的主页\">\n  </script>\n  <script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n  <script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n</body>\n</html>","updated":"2019-03-02T05:18:29.873Z","path":"/404.html","layout":"page","_id":"ckkdqtlp10001e8ul1jlorgp7","content":"<p>&lt;!DOCTYPE HTML&gt;</p>\n<html>\n<head><meta name=\"generator\" content=\"Hexo 3.8.0\">\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n  <meta name=\"robots\" content=\"all\">\n  <meta name=\"robots\" content=\"index,follow\">\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n  <script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homepageurl=\"/\" homepagename=\"回到我的主页\">\n  </script>\n  <script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n  <script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n</body>\n</html>","site":{"data":{}},"excerpt":"","more":"<p>&lt;!DOCTYPE HTML&gt;</p>\n<html>\n<head><meta name=\"generator\" content=\"Hexo 3.8.0\">\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n  <meta name=\"robots\" content=\"all\">\n  <meta name=\"robots\" content=\"index,follow\">\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n  <script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homepageurl=\"/\" homepagename=\"回到我的主页\">\n  </script>\n  <script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n  <script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n</body>\n</html>"},{"title":"关于我","date":"2019-03-02T05:03:31.000Z","type":"about","_content":"# 教育经历\n* 上海交通大学电气工程系 硕士研究生（在读）\n\t* 2018年9月至今\n* 上海交通大学电气工程系 本科\n\t* 2014年9月至2018年6月\n\n# 工作经历\n* 杭州复杂美科技有限公司\n\t* 2018年7月至2018年10月\n\t* 区块链软件开发实习生\n* 上海未来之城青少年STEM教育中心\n\t* 2018年1月至2018年7月\n\t* 助理电气工程师\n* 阿里云计算有限公司\n\t* 2020年6月至2020年9月\n\t* 实习开发工程师\n\t\n# 技能\n* 嵌入式开发\n* Matlab/Simulink\n* C/C++、Java、Golang\n* PCB Layout\n\n# 联系方式\n* E-mail：linjw1008@163.com","source":"about/index.md","raw":"---\ntitle: 关于我\ndate: 2019-03-02 13:03:31\ntype: about\n---\n# 教育经历\n* 上海交通大学电气工程系 硕士研究生（在读）\n\t* 2018年9月至今\n* 上海交通大学电气工程系 本科\n\t* 2014年9月至2018年6月\n\n# 工作经历\n* 杭州复杂美科技有限公司\n\t* 2018年7月至2018年10月\n\t* 区块链软件开发实习生\n* 上海未来之城青少年STEM教育中心\n\t* 2018年1月至2018年7月\n\t* 助理电气工程师\n* 阿里云计算有限公司\n\t* 2020年6月至2020年9月\n\t* 实习开发工程师\n\t\n# 技能\n* 嵌入式开发\n* Matlab/Simulink\n* C/C++、Java、Golang\n* PCB Layout\n\n# 联系方式\n* E-mail：linjw1008@163.com","updated":"2021-01-25T13:35:11.265Z","path":"about/index.html","comments":1,"layout":"page","_id":"ckkdqtlp70003e8ulvwam3olb","content":"<h1 id=\"教育经历\"><a href=\"#教育经历\" class=\"headerlink\" title=\"教育经历\"></a>教育经历</h1><ul>\n<li>上海交通大学电气工程系 硕士研究生（在读）<ul>\n<li>2018年9月至今</li>\n</ul>\n</li>\n<li>上海交通大学电气工程系 本科<ul>\n<li>2014年9月至2018年6月</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"工作经历\"><a href=\"#工作经历\" class=\"headerlink\" title=\"工作经历\"></a>工作经历</h1><ul>\n<li>杭州复杂美科技有限公司<ul>\n<li>2018年7月至2018年10月</li>\n<li>区块链软件开发实习生</li>\n</ul>\n</li>\n<li>上海未来之城青少年STEM教育中心<ul>\n<li>2018年1月至2018年7月</li>\n<li>助理电气工程师</li>\n</ul>\n</li>\n<li>阿里云计算有限公司<ul>\n<li>2020年6月至2020年9月</li>\n<li>实习开发工程师</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"技能\"><a href=\"#技能\" class=\"headerlink\" title=\"技能\"></a>技能</h1><ul>\n<li>嵌入式开发</li>\n<li>Matlab/Simulink</li>\n<li>C/C++、Java、Golang</li>\n<li>PCB Layout</li>\n</ul>\n<h1 id=\"联系方式\"><a href=\"#联系方式\" class=\"headerlink\" title=\"联系方式\"></a>联系方式</h1><ul>\n<li>E-mail：linjw1008@163.com</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"教育经历\"><a href=\"#教育经历\" class=\"headerlink\" title=\"教育经历\"></a>教育经历</h1><ul>\n<li>上海交通大学电气工程系 硕士研究生（在读）<ul>\n<li>2018年9月至今</li>\n</ul>\n</li>\n<li>上海交通大学电气工程系 本科<ul>\n<li>2014年9月至2018年6月</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"工作经历\"><a href=\"#工作经历\" class=\"headerlink\" title=\"工作经历\"></a>工作经历</h1><ul>\n<li>杭州复杂美科技有限公司<ul>\n<li>2018年7月至2018年10月</li>\n<li>区块链软件开发实习生</li>\n</ul>\n</li>\n<li>上海未来之城青少年STEM教育中心<ul>\n<li>2018年1月至2018年7月</li>\n<li>助理电气工程师</li>\n</ul>\n</li>\n<li>阿里云计算有限公司<ul>\n<li>2020年6月至2020年9月</li>\n<li>实习开发工程师</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"技能\"><a href=\"#技能\" class=\"headerlink\" title=\"技能\"></a>技能</h1><ul>\n<li>嵌入式开发</li>\n<li>Matlab/Simulink</li>\n<li>C/C++、Java、Golang</li>\n<li>PCB Layout</li>\n</ul>\n<h1 id=\"联系方式\"><a href=\"#联系方式\" class=\"headerlink\" title=\"联系方式\"></a>联系方式</h1><ul>\n<li>E-mail：linjw1008@163.com</li>\n</ul>\n"},{"title":"categories","date":"2019-03-02T03:24:42.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2019-03-02 11:24:42\ntype: \"categories\"\n---\n","updated":"2019-03-02T03:25:38.068Z","path":"categories/index.html","comments":1,"layout":"page","_id":"ckkdqtlpd0005e8ul9hycsmer","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2019-03-02T05:05:00.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2019-03-02 13:05:00\ntype: tags\n---\n","updated":"2019-03-02T05:06:01.761Z","path":"tags/index.html","comments":1,"layout":"page","_id":"ckkdqtlsp000pe8ulpovbzkyj","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Matlab/Simulink模型提高运行速度的方法","date":"2019-03-06T04:49:11.000Z","_content":"\n# 启用加速器\n\n# 检查代数环并修正","source":"_drafts/Matlab-Simulink模型提高运行速度的方法.md","raw":"---\ntitle: Matlab/Simulink模型提高运行速度的方法\ndate: 2019-03-06 12:49:11\ntags:\n---\n\n# 启用加速器\n\n# 检查代数环并修正","slug":"Matlab-Simulink模型提高运行速度的方法","published":0,"updated":"2019-03-06T04:55:40.961Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckkdqtlon0000e8ulgdw40mpp","content":"<h1 id=\"启用加速器\"><a href=\"#启用加速器\" class=\"headerlink\" title=\"启用加速器\"></a>启用加速器</h1><h1 id=\"检查代数环并修正\"><a href=\"#检查代数环并修正\" class=\"headerlink\" title=\"检查代数环并修正\"></a>检查代数环并修正</h1>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"启用加速器\"><a href=\"#启用加速器\" class=\"headerlink\" title=\"启用加速器\"></a>启用加速器</h1><h1 id=\"检查代数环并修正\"><a href=\"#检查代数环并修正\" class=\"headerlink\" title=\"检查代数环并修正\"></a>检查代数环并修正</h1>"},{"title":"Keil开发环境build报错解决方法A1067E","mathjax":true,"date":"2019-03-21T02:31:32.000Z","_content":"\n\n\n错误内容：Error: A1067E: Output file specified as '..\\src\\startup_stm32f4xx.s', but it has already been specified as '.\\startup_stm32f4xx.o'\n<!-- more -->\n错误代码是A1067E，在Keil官网查询得到错误原因如下\n> A1067E: Output file specified as '<filename1>', but it has already been specified as '<filename2>'\n> More than one output file, -o filename, has been specified on the command line. Misspelling a command line option can cause this.\n\n大概意思是文件重复，但是查找后并没有出现文件重复的现象，官网也没有给出具体的解决方案，后来发现可以有如下解决方案。\n# 方案1： \n在Keil界面中进入Project->Optionns for Target->Device，然后找到自己所用板子的型号，选定。若已选定，更新一下。\n![](Solution1.png)\n# 方案2：\n可能是没有安装对应Devices的开发包导致的，当然如果没有安装开发包的话在方案一中提到的Project->Optionns for Target->Device页面中应该也是找不到对应的Device的，我个人遇到的就是这种情况，由于Keil是新安装的于是忽视了这一点。解决方案如下。\n首先进入Keil界面，打开pack install。\n![](step1.png)\n然后在左侧搜索自己所用的devices型号（例如我的是stm32F4系列），这时候右侧的packs页面会同步显示出对应的开发包，在对应的开发包位置点击Install，便会开始自动下载安装。\n![](step2and3.png)\n但是需要注意的是，通过pack install下载速度似乎非常慢，而且经常提示stall，建议通过官网下载对应型号的pack然后直接在pack install中导入，如果发现官网下载速度也较慢，这里提供了一些stm32F1、stm32F2、stm32F3、stm32F4的pack的第三方下载地址，实测用迅雷下载速度很快。\nF1pack包 https://keilpack.azureedge.net/pack/Keil.STM32F1xx_DFP.2.3.0.pack\nF2pack包 https://keilpack.azureedge.net/pack/Keil.STM32F2xx_DFP.2.9.0.pack\nF3pack包 https://keilpack.azureedge.net/pack/Keil.STM32F3xx_DFP.2.1.0.pack\nF4pack包 https://keilpack.azureedge.net/pack/Keil.STM32F4xx_DFP.2.13.0.pack\n(以上链接转载自：https://blog.csdn.net/junyilao/article/details/77679702 )","source":"_posts/2019-03-21-Keil开发环境build报错解决方法A1067E.md","raw":"---\ntitle: Keil开发环境build报错解决方法A1067E\ntags:\n  - 嵌入式\n  - STM32\n  - Keil\ncategories:\n  - 学习笔记\nmathjax: true\ndate: 2019-03-21 10:31:32\n---\n\n\n\n错误内容：Error: A1067E: Output file specified as '..\\src\\startup_stm32f4xx.s', but it has already been specified as '.\\startup_stm32f4xx.o'\n<!-- more -->\n错误代码是A1067E，在Keil官网查询得到错误原因如下\n> A1067E: Output file specified as '<filename1>', but it has already been specified as '<filename2>'\n> More than one output file, -o filename, has been specified on the command line. Misspelling a command line option can cause this.\n\n大概意思是文件重复，但是查找后并没有出现文件重复的现象，官网也没有给出具体的解决方案，后来发现可以有如下解决方案。\n# 方案1： \n在Keil界面中进入Project->Optionns for Target->Device，然后找到自己所用板子的型号，选定。若已选定，更新一下。\n![](Solution1.png)\n# 方案2：\n可能是没有安装对应Devices的开发包导致的，当然如果没有安装开发包的话在方案一中提到的Project->Optionns for Target->Device页面中应该也是找不到对应的Device的，我个人遇到的就是这种情况，由于Keil是新安装的于是忽视了这一点。解决方案如下。\n首先进入Keil界面，打开pack install。\n![](step1.png)\n然后在左侧搜索自己所用的devices型号（例如我的是stm32F4系列），这时候右侧的packs页面会同步显示出对应的开发包，在对应的开发包位置点击Install，便会开始自动下载安装。\n![](step2and3.png)\n但是需要注意的是，通过pack install下载速度似乎非常慢，而且经常提示stall，建议通过官网下载对应型号的pack然后直接在pack install中导入，如果发现官网下载速度也较慢，这里提供了一些stm32F1、stm32F2、stm32F3、stm32F4的pack的第三方下载地址，实测用迅雷下载速度很快。\nF1pack包 https://keilpack.azureedge.net/pack/Keil.STM32F1xx_DFP.2.3.0.pack\nF2pack包 https://keilpack.azureedge.net/pack/Keil.STM32F2xx_DFP.2.9.0.pack\nF3pack包 https://keilpack.azureedge.net/pack/Keil.STM32F3xx_DFP.2.1.0.pack\nF4pack包 https://keilpack.azureedge.net/pack/Keil.STM32F4xx_DFP.2.13.0.pack\n(以上链接转载自：https://blog.csdn.net/junyilao/article/details/77679702 )","slug":"Keil开发环境build报错解决方法A1067E","published":1,"updated":"2019-03-21T08:36:39.940Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckkdqtlp40002e8ul63bm8gye","content":"<p>错误内容：Error: A1067E: Output file specified as ‘..\\src\\startup_stm32f4xx.s’, but it has already been specified as ‘.\\startup_stm32f4xx.o’<br><a id=\"more\"></a><br>错误代码是A1067E，在Keil官网查询得到错误原因如下</p>\n<blockquote>\n<p>A1067E: Output file specified as ‘<filename1>‘, but it has already been specified as ‘<filename2>‘<br>More than one output file, -o filename, has been specified on the command line. Misspelling a command line option can cause this.</filename2></filename1></p>\n</blockquote>\n<p>大概意思是文件重复，但是查找后并没有出现文件重复的现象，官网也没有给出具体的解决方案，后来发现可以有如下解决方案。</p>\n<h1 id=\"方案1：\"><a href=\"#方案1：\" class=\"headerlink\" title=\"方案1：\"></a>方案1：</h1><p>在Keil界面中进入Project-&gt;Optionns for Target-&gt;Device，然后找到自己所用板子的型号，选定。若已选定，更新一下。<br><img src=\"Solution1.png\" alt></p>\n<h1 id=\"方案2：\"><a href=\"#方案2：\" class=\"headerlink\" title=\"方案2：\"></a>方案2：</h1><p>可能是没有安装对应Devices的开发包导致的，当然如果没有安装开发包的话在方案一中提到的Project-&gt;Optionns for Target-&gt;Device页面中应该也是找不到对应的Device的，我个人遇到的就是这种情况，由于Keil是新安装的于是忽视了这一点。解决方案如下。<br>首先进入Keil界面，打开pack install。<br><img src=\"step1.png\" alt><br>然后在左侧搜索自己所用的devices型号（例如我的是stm32F4系列），这时候右侧的packs页面会同步显示出对应的开发包，在对应的开发包位置点击Install，便会开始自动下载安装。<br><img src=\"step2and3.png\" alt><br>但是需要注意的是，通过pack install下载速度似乎非常慢，而且经常提示stall，建议通过官网下载对应型号的pack然后直接在pack install中导入，如果发现官网下载速度也较慢，这里提供了一些stm32F1、stm32F2、stm32F3、stm32F4的pack的第三方下载地址，实测用迅雷下载速度很快。<br>F1pack包 <a href=\"https://keilpack.azureedge.net/pack/Keil.STM32F1xx_DFP.2.3.0.pack\" target=\"_blank\" rel=\"noopener\">https://keilpack.azureedge.net/pack/Keil.STM32F1xx_DFP.2.3.0.pack</a><br>F2pack包 <a href=\"https://keilpack.azureedge.net/pack/Keil.STM32F2xx_DFP.2.9.0.pack\" target=\"_blank\" rel=\"noopener\">https://keilpack.azureedge.net/pack/Keil.STM32F2xx_DFP.2.9.0.pack</a><br>F3pack包 <a href=\"https://keilpack.azureedge.net/pack/Keil.STM32F3xx_DFP.2.1.0.pack\" target=\"_blank\" rel=\"noopener\">https://keilpack.azureedge.net/pack/Keil.STM32F3xx_DFP.2.1.0.pack</a><br>F4pack包 <a href=\"https://keilpack.azureedge.net/pack/Keil.STM32F4xx_DFP.2.13.0.pack\" target=\"_blank\" rel=\"noopener\">https://keilpack.azureedge.net/pack/Keil.STM32F4xx_DFP.2.13.0.pack</a><br>(以上链接转载自：<a href=\"https://blog.csdn.net/junyilao/article/details/77679702\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/junyilao/article/details/77679702</a> )</p>\n","site":{"data":{}},"excerpt":"<p>错误内容：Error: A1067E: Output file specified as ‘..\\src\\startup_stm32f4xx.s’, but it has already been specified as ‘.\\startup_stm32f4xx.o’<br>","more":"<br>错误代码是A1067E，在Keil官网查询得到错误原因如下</p>\n<blockquote>\n<p>A1067E: Output file specified as ‘<filename1>‘, but it has already been specified as ‘<filename2>‘<br>More than one output file, -o filename, has been specified on the command line. Misspelling a command line option can cause this.</filename2></filename1></p>\n</blockquote>\n<p>大概意思是文件重复，但是查找后并没有出现文件重复的现象，官网也没有给出具体的解决方案，后来发现可以有如下解决方案。</p>\n<h1 id=\"方案1：\"><a href=\"#方案1：\" class=\"headerlink\" title=\"方案1：\"></a>方案1：</h1><p>在Keil界面中进入Project-&gt;Optionns for Target-&gt;Device，然后找到自己所用板子的型号，选定。若已选定，更新一下。<br><img src=\"Solution1.png\" alt></p>\n<h1 id=\"方案2：\"><a href=\"#方案2：\" class=\"headerlink\" title=\"方案2：\"></a>方案2：</h1><p>可能是没有安装对应Devices的开发包导致的，当然如果没有安装开发包的话在方案一中提到的Project-&gt;Optionns for Target-&gt;Device页面中应该也是找不到对应的Device的，我个人遇到的就是这种情况，由于Keil是新安装的于是忽视了这一点。解决方案如下。<br>首先进入Keil界面，打开pack install。<br><img src=\"step1.png\" alt><br>然后在左侧搜索自己所用的devices型号（例如我的是stm32F4系列），这时候右侧的packs页面会同步显示出对应的开发包，在对应的开发包位置点击Install，便会开始自动下载安装。<br><img src=\"step2and3.png\" alt><br>但是需要注意的是，通过pack install下载速度似乎非常慢，而且经常提示stall，建议通过官网下载对应型号的pack然后直接在pack install中导入，如果发现官网下载速度也较慢，这里提供了一些stm32F1、stm32F2、stm32F3、stm32F4的pack的第三方下载地址，实测用迅雷下载速度很快。<br>F1pack包 <a href=\"https://keilpack.azureedge.net/pack/Keil.STM32F1xx_DFP.2.3.0.pack\" target=\"_blank\" rel=\"noopener\">https://keilpack.azureedge.net/pack/Keil.STM32F1xx_DFP.2.3.0.pack</a><br>F2pack包 <a href=\"https://keilpack.azureedge.net/pack/Keil.STM32F2xx_DFP.2.9.0.pack\" target=\"_blank\" rel=\"noopener\">https://keilpack.azureedge.net/pack/Keil.STM32F2xx_DFP.2.9.0.pack</a><br>F3pack包 <a href=\"https://keilpack.azureedge.net/pack/Keil.STM32F3xx_DFP.2.1.0.pack\" target=\"_blank\" rel=\"noopener\">https://keilpack.azureedge.net/pack/Keil.STM32F3xx_DFP.2.1.0.pack</a><br>F4pack包 <a href=\"https://keilpack.azureedge.net/pack/Keil.STM32F4xx_DFP.2.13.0.pack\" target=\"_blank\" rel=\"noopener\">https://keilpack.azureedge.net/pack/Keil.STM32F4xx_DFP.2.13.0.pack</a><br>(以上链接转载自：<a href=\"https://blog.csdn.net/junyilao/article/details/77679702\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/junyilao/article/details/77679702</a> )</p>"},{"title":"基于CHNN的旅行商问题","date":"2019-03-02T07:05:41.000Z","mathjax":true,"_content":"\n最近一门人工神经网络的课程结课，利用Matlab做了一个小Project，在此分享。\n<!-- more -->\n\n# 问题描述\n旅行商问题（Travelling salesman problem, TSP）：给定一系列城市和每对城市之间的距离，求解访问每一座城市一次并回到起始城市的最短回路。它是组合优化中的一个NP困难问题，很难通过枚举法求解，特别是在N较大的时候。但是通过神经网络或者其他启发式算法可以较好地解决该问题。\n# Hopfield网络\n## 简介\nHopfield神经网络是一种递归神经网络，由约翰·霍普菲尔德等人在1982年发明。Hopfield网络是一种结合存储系统和二元系统的神经网络，有连续型与离散型之分。TSP问题可用连续型Hopfield网络（Continuous Hopfield Neural Network, CHNN）解决，故本文主要介绍CHNN网络。\nCHNN可由一些简单的电子线路连接起来实现（Fun Fact：发明CHNN网络的人是搞物理的，网络实验也是在物理元件电路上进行的），如图所示，每个神经元均具有连续时间变化的输出值，并采用具有饱和非线性的运算放大器来模拟神经元的S型单调输入——输出关系。\n![](circuit.png)\n对节点数量为N的CHNN网络，其神经元状态变量的动态变化可用下述非线性微分方程组来描述\n$$\n\\begin{align}\n&c_i\\frac{du_i}{dt}=\\sum_{j=1}^{N}T_{ij}v_{j}-\\frac{u_i}{R_i}+I_i, i=1,2,3,......,N\\\\\n&v_i=f_i(u_i), i=1,2,3,......,N\n\\end{align}\n$$\n其中，$f(x)$为激励函数，$f(x)=\\frac{1}{2}[1+tanh(\\frac{x}{x_0})]$。\n定义能量函数\n$$E=-\\frac{1}{2}\\sum_{i=1}^{N}\\sum_{j=1, j\\neq i}^{N}T_{ij}v_iv_j-\\sum_{i=1}^{N}v_iI_i+\\sum_{i=1}^{N}\\frac{1}{R_i}\\int_0^{v_i}f^{-1}(v)dv$$\nCHNN能量函数的表达形式与物理意义的能量函数一致，用于表征网络状态的变化趋势。\n\n\n## 两个结论\n并有如下结论（详细推导过程不赘述）\n* 结论1：$\\frac{\\partial E}{\\partial v_i}=-C_i\\frac{\\partial u_i}{\\partial t}$\n* 结论2：若函数$f(v)$是单调递增且连续的，并有$C_i>0，T_{ij}=T_{ji}$，则随着网络状态的变化，有$\\frac{\\partial E}{\\partial t}≤0$，当且仅当$\\frac{\\partial v_i}{\\partial t}=0$时，$\\frac{\\partial E}{\\partial t}=0$。\n\n# 利用CHNN求解TSP问题\n## 置换矩阵\n由于问题中要求每个城市要求均需访问一次且不重复，故采用置换矩阵表示路径顺序。\n* 置换矩阵\n矩阵的每一行表示一个城市，每一列表示访问的顺序，用元素“1”表示访问，元素“0”表示没有访问。\n\n## 求解思路\n基于以上结论，若将最优化问题的目标函数转换成网络的能量函数，把问题变量对应于网络状态，则可将CHNN网络用于解决优化组合问题。\n在实际求解时，可根据状态方程反推出网络的结构，即$T_{ij}$、$I_i$等参数，然后在确定的网络下进行迭代求解。但当问题较为复杂时，往往比较难通过状态方程反推出网络结构，这时可利用上述重要结论，首先为网络输出赋初值，然后在每次迭代时求出状态方程的增量进行叠加，使网络的输出逐渐收敛。\n## 能量函数\nTSP问题所用的能量函数可包含约束项和优化项。\n* 约束项\n约束项主要保证每个城市均被访问且只能被访问1次，即输出矩阵为置换矩阵。可用数学形式表示如下\n$$E_1=\\frac{A}{2}\\sum_{x=1}^{N}\\sum_{i=1}^{N-1}\\sum_{j=i+1}^{N}v_{xi}v_{xj}\n+\\frac{B}{2}\\sum_{i=1}^{N}\\sum_{x=1}^{N-1}\\sum_{y=x+1}^{N}v_{xi}v_{yi}\n+\\frac{C}{2}(\\sum_{x=1}^{N}\\sum_{i=1}^{N}v_{xi}-N)^2$$\n* 优化项\n优化项使得总路程往最小化的方向变化。可表示如下\n$$E_2=\\frac{D}{2}\\sum_{x=1}^{N}\\sum_{y\\neq x}^{N}\\sum_{i=1}^{N}d_{xy}v_{xi}(v_{y,i+1}+v_{y,i-1})$$\n* 总能量函数\n总的能量函数为\n$$\\begin{align}\nE=&\\frac{A}{2}\\sum_{x=1}^{N}\\sum_{i=1}^{N-1}\\sum_{j=i+1}^{N}v_{xi}v_{xj} \\\\\n&+\\frac{B}{2}\\sum_{i=1}^{N}\\sum_{x=1}^{N-1}\\sum_{y=x+1}^{N}v_{xi}v_{yi} \\\\\n&+\\frac{C}{2}(\\sum_{x=1}^{N}\\sum_{i=1}^{N}v_{xi}-N)^2 \\\\\n&+\\frac{D}{2}\\sum_{x=1}^{N}\\sum_{y\\neq x}^{N}\\sum_{i=1}^{N}d_{xy}v_{xi}(v_{y,i+1}+v_{y,i-1}) \\\\\n&+\\sum_{x=1}^{N}\\sum_{i=1}^{N}\\frac{1}{R_{xi}}\\int_0^{v_{xi}}f^{-1}(v)dv\n\\end{align}$$\n\n## 动态方程\n根据结论1，可得到以下动态方程，该方程用于每次迭代时更新状态变量。\n$$\\begin{align}\nc_{xi}\\frac{du_{xi}}{dt}&=-\\frac{\\partial E}{\\partial v_{xi}}\\\\\n&=-\\frac{u_{xi}}{R_{xi}}-\\frac{A}{2}\\sum_{j=1,j\\neq i}^{N}v_{xj}-\\frac{B}{2}\\sum_{y=1,y\\neq x}^{N}y_{yi} \\\\\n&-C[\\sum_{x=1}^{N}\\sum_{i=1}^{N}v_{xi}-N]-\\frac{D}{2}\\sum_{y=1,y\\neq x}^{N}d_{xy}[v_{y,i+1}+v_{y,i-1}]\n\\end{align}\n$$\n# 算法实现\n## 算法流程\n1. 状态变量初始化\n首先，按照下式为各状态变量赋随机初值\n$$u_{xi}(t_0)=\\frac{1}{2}u_0ln(N-1)+\\Delta u_{xi}$$\n其中，$\\Delta  u_{xi}$取区间$(-1,+1)$内的随机值。\n2. 计算神经元输出\n根据激励函数计算神经元的输出\n$$v_{xi}(t_0+k\\Delta  t)=f[u_{xi}(t_0+k\\Delta t)]=\\frac{1}{2}{1+tanh[\\frac{u_{xi}(t_0+k\\Delta t)}{u_{0}}]}$$\n3. 计算状态变量增量\n得到神经元的输出后，可继续计算状态变量的增量\n$$\\begin{align}\nc_{xi}\\frac{du_{xi}}{dt}=&-\\frac{u_{xi}(t_0+k\\Delta  t)}{R_{xi}}- \\\\\n&-\\frac{A}{2}\\sum_{j=1,j\\neq i}^{N}v_{xj}(t_0+k\\Delta  t) \\\\\n&-\\frac{B}{2}\\sum_{y=1,y\\neq x}^{N}y_{yi}(t_0+k\\Delta  t) \\\\\n&-C[\\sum_{x=1}^{N}\\sum_{i=1}^{N}v_{xi}(t_0+k\\Delta  t)-N] \\\\\n&-\\frac{D}{2}\\sum_{y=1,y\\neq x}^{N}d_{xy}[v_{y,i+1}(t_0+k\\Delta  t)+v_{y,i-1}(t_0+k\\Delta  t)]\n\\end{align}\n$$\n4. 计算新的状态变量\n将状态变量与上一时刻的状态变量叠加得到新的状态变量。\n5. 计算能量\n根据新的状态变量和神经元输出，代入网络能量表达式计算得到本次迭代后的能量。\n6. 判断是否满足终止条件\n当能量值不再变化或者迭代次数达到最大值时，则满足迭代收敛条件。但在实际操作中，能量值很难满足完全不变的要求，为提高求解效率，可计算两次迭代之间的能量变化量，当变化率小于某一阈值时认为能量不变。\n若满足迭代终止条件，则进入下一步骤，否则返回步骤2继续迭代。\n7. 检查解是否满足要求\n检查解是否满足输出矩阵为置换矩阵，若不满足要求，则返回步骤1，否则输出求解结果。\n\n## 源代码\n请见Github：\nhttps://github.com/linjw1008/TSP_MATLAB\n相关参数可以微调，达到更好的求解效果。\n## 运行结果\n![](result.bmp)","source":"_posts/2019-03-02-基于CHNN的旅行商问题.md","raw":"---\ntitle: 基于CHNN的旅行商问题\ndate: 2019-03-02 15:05:41\ncategories:\n- 学习笔记\ntags:\n- 人工神经网络\n- Matlab\nmathjax: true\n---\n\n最近一门人工神经网络的课程结课，利用Matlab做了一个小Project，在此分享。\n<!-- more -->\n\n# 问题描述\n旅行商问题（Travelling salesman problem, TSP）：给定一系列城市和每对城市之间的距离，求解访问每一座城市一次并回到起始城市的最短回路。它是组合优化中的一个NP困难问题，很难通过枚举法求解，特别是在N较大的时候。但是通过神经网络或者其他启发式算法可以较好地解决该问题。\n# Hopfield网络\n## 简介\nHopfield神经网络是一种递归神经网络，由约翰·霍普菲尔德等人在1982年发明。Hopfield网络是一种结合存储系统和二元系统的神经网络，有连续型与离散型之分。TSP问题可用连续型Hopfield网络（Continuous Hopfield Neural Network, CHNN）解决，故本文主要介绍CHNN网络。\nCHNN可由一些简单的电子线路连接起来实现（Fun Fact：发明CHNN网络的人是搞物理的，网络实验也是在物理元件电路上进行的），如图所示，每个神经元均具有连续时间变化的输出值，并采用具有饱和非线性的运算放大器来模拟神经元的S型单调输入——输出关系。\n![](circuit.png)\n对节点数量为N的CHNN网络，其神经元状态变量的动态变化可用下述非线性微分方程组来描述\n$$\n\\begin{align}\n&c_i\\frac{du_i}{dt}=\\sum_{j=1}^{N}T_{ij}v_{j}-\\frac{u_i}{R_i}+I_i, i=1,2,3,......,N\\\\\n&v_i=f_i(u_i), i=1,2,3,......,N\n\\end{align}\n$$\n其中，$f(x)$为激励函数，$f(x)=\\frac{1}{2}[1+tanh(\\frac{x}{x_0})]$。\n定义能量函数\n$$E=-\\frac{1}{2}\\sum_{i=1}^{N}\\sum_{j=1, j\\neq i}^{N}T_{ij}v_iv_j-\\sum_{i=1}^{N}v_iI_i+\\sum_{i=1}^{N}\\frac{1}{R_i}\\int_0^{v_i}f^{-1}(v)dv$$\nCHNN能量函数的表达形式与物理意义的能量函数一致，用于表征网络状态的变化趋势。\n\n\n## 两个结论\n并有如下结论（详细推导过程不赘述）\n* 结论1：$\\frac{\\partial E}{\\partial v_i}=-C_i\\frac{\\partial u_i}{\\partial t}$\n* 结论2：若函数$f(v)$是单调递增且连续的，并有$C_i>0，T_{ij}=T_{ji}$，则随着网络状态的变化，有$\\frac{\\partial E}{\\partial t}≤0$，当且仅当$\\frac{\\partial v_i}{\\partial t}=0$时，$\\frac{\\partial E}{\\partial t}=0$。\n\n# 利用CHNN求解TSP问题\n## 置换矩阵\n由于问题中要求每个城市要求均需访问一次且不重复，故采用置换矩阵表示路径顺序。\n* 置换矩阵\n矩阵的每一行表示一个城市，每一列表示访问的顺序，用元素“1”表示访问，元素“0”表示没有访问。\n\n## 求解思路\n基于以上结论，若将最优化问题的目标函数转换成网络的能量函数，把问题变量对应于网络状态，则可将CHNN网络用于解决优化组合问题。\n在实际求解时，可根据状态方程反推出网络的结构，即$T_{ij}$、$I_i$等参数，然后在确定的网络下进行迭代求解。但当问题较为复杂时，往往比较难通过状态方程反推出网络结构，这时可利用上述重要结论，首先为网络输出赋初值，然后在每次迭代时求出状态方程的增量进行叠加，使网络的输出逐渐收敛。\n## 能量函数\nTSP问题所用的能量函数可包含约束项和优化项。\n* 约束项\n约束项主要保证每个城市均被访问且只能被访问1次，即输出矩阵为置换矩阵。可用数学形式表示如下\n$$E_1=\\frac{A}{2}\\sum_{x=1}^{N}\\sum_{i=1}^{N-1}\\sum_{j=i+1}^{N}v_{xi}v_{xj}\n+\\frac{B}{2}\\sum_{i=1}^{N}\\sum_{x=1}^{N-1}\\sum_{y=x+1}^{N}v_{xi}v_{yi}\n+\\frac{C}{2}(\\sum_{x=1}^{N}\\sum_{i=1}^{N}v_{xi}-N)^2$$\n* 优化项\n优化项使得总路程往最小化的方向变化。可表示如下\n$$E_2=\\frac{D}{2}\\sum_{x=1}^{N}\\sum_{y\\neq x}^{N}\\sum_{i=1}^{N}d_{xy}v_{xi}(v_{y,i+1}+v_{y,i-1})$$\n* 总能量函数\n总的能量函数为\n$$\\begin{align}\nE=&\\frac{A}{2}\\sum_{x=1}^{N}\\sum_{i=1}^{N-1}\\sum_{j=i+1}^{N}v_{xi}v_{xj} \\\\\n&+\\frac{B}{2}\\sum_{i=1}^{N}\\sum_{x=1}^{N-1}\\sum_{y=x+1}^{N}v_{xi}v_{yi} \\\\\n&+\\frac{C}{2}(\\sum_{x=1}^{N}\\sum_{i=1}^{N}v_{xi}-N)^2 \\\\\n&+\\frac{D}{2}\\sum_{x=1}^{N}\\sum_{y\\neq x}^{N}\\sum_{i=1}^{N}d_{xy}v_{xi}(v_{y,i+1}+v_{y,i-1}) \\\\\n&+\\sum_{x=1}^{N}\\sum_{i=1}^{N}\\frac{1}{R_{xi}}\\int_0^{v_{xi}}f^{-1}(v)dv\n\\end{align}$$\n\n## 动态方程\n根据结论1，可得到以下动态方程，该方程用于每次迭代时更新状态变量。\n$$\\begin{align}\nc_{xi}\\frac{du_{xi}}{dt}&=-\\frac{\\partial E}{\\partial v_{xi}}\\\\\n&=-\\frac{u_{xi}}{R_{xi}}-\\frac{A}{2}\\sum_{j=1,j\\neq i}^{N}v_{xj}-\\frac{B}{2}\\sum_{y=1,y\\neq x}^{N}y_{yi} \\\\\n&-C[\\sum_{x=1}^{N}\\sum_{i=1}^{N}v_{xi}-N]-\\frac{D}{2}\\sum_{y=1,y\\neq x}^{N}d_{xy}[v_{y,i+1}+v_{y,i-1}]\n\\end{align}\n$$\n# 算法实现\n## 算法流程\n1. 状态变量初始化\n首先，按照下式为各状态变量赋随机初值\n$$u_{xi}(t_0)=\\frac{1}{2}u_0ln(N-1)+\\Delta u_{xi}$$\n其中，$\\Delta  u_{xi}$取区间$(-1,+1)$内的随机值。\n2. 计算神经元输出\n根据激励函数计算神经元的输出\n$$v_{xi}(t_0+k\\Delta  t)=f[u_{xi}(t_0+k\\Delta t)]=\\frac{1}{2}{1+tanh[\\frac{u_{xi}(t_0+k\\Delta t)}{u_{0}}]}$$\n3. 计算状态变量增量\n得到神经元的输出后，可继续计算状态变量的增量\n$$\\begin{align}\nc_{xi}\\frac{du_{xi}}{dt}=&-\\frac{u_{xi}(t_0+k\\Delta  t)}{R_{xi}}- \\\\\n&-\\frac{A}{2}\\sum_{j=1,j\\neq i}^{N}v_{xj}(t_0+k\\Delta  t) \\\\\n&-\\frac{B}{2}\\sum_{y=1,y\\neq x}^{N}y_{yi}(t_0+k\\Delta  t) \\\\\n&-C[\\sum_{x=1}^{N}\\sum_{i=1}^{N}v_{xi}(t_0+k\\Delta  t)-N] \\\\\n&-\\frac{D}{2}\\sum_{y=1,y\\neq x}^{N}d_{xy}[v_{y,i+1}(t_0+k\\Delta  t)+v_{y,i-1}(t_0+k\\Delta  t)]\n\\end{align}\n$$\n4. 计算新的状态变量\n将状态变量与上一时刻的状态变量叠加得到新的状态变量。\n5. 计算能量\n根据新的状态变量和神经元输出，代入网络能量表达式计算得到本次迭代后的能量。\n6. 判断是否满足终止条件\n当能量值不再变化或者迭代次数达到最大值时，则满足迭代收敛条件。但在实际操作中，能量值很难满足完全不变的要求，为提高求解效率，可计算两次迭代之间的能量变化量，当变化率小于某一阈值时认为能量不变。\n若满足迭代终止条件，则进入下一步骤，否则返回步骤2继续迭代。\n7. 检查解是否满足要求\n检查解是否满足输出矩阵为置换矩阵，若不满足要求，则返回步骤1，否则输出求解结果。\n\n## 源代码\n请见Github：\nhttps://github.com/linjw1008/TSP_MATLAB\n相关参数可以微调，达到更好的求解效果。\n## 运行结果\n![](result.bmp)","slug":"基于CHNN的旅行商问题","published":1,"updated":"2019-03-03T14:57:04.889Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckkdqtlp90004e8uluagfubvj","content":"<p>最近一门人工神经网络的课程结课，利用Matlab做了一个小Project，在此分享。<br><a id=\"more\"></a></p>\n<h1 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h1><p>旅行商问题（Travelling salesman problem, TSP）：给定一系列城市和每对城市之间的距离，求解访问每一座城市一次并回到起始城市的最短回路。它是组合优化中的一个NP困难问题，很难通过枚举法求解，特别是在N较大的时候。但是通过神经网络或者其他启发式算法可以较好地解决该问题。</p>\n<h1 id=\"Hopfield网络\"><a href=\"#Hopfield网络\" class=\"headerlink\" title=\"Hopfield网络\"></a>Hopfield网络</h1><h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>Hopfield神经网络是一种递归神经网络，由约翰·霍普菲尔德等人在1982年发明。Hopfield网络是一种结合存储系统和二元系统的神经网络，有连续型与离散型之分。TSP问题可用连续型Hopfield网络（Continuous Hopfield Neural Network, CHNN）解决，故本文主要介绍CHNN网络。<br>CHNN可由一些简单的电子线路连接起来实现（Fun Fact：发明CHNN网络的人是搞物理的，网络实验也是在物理元件电路上进行的），如图所示，每个神经元均具有连续时间变化的输出值，并采用具有饱和非线性的运算放大器来模拟神经元的S型单调输入——输出关系。<br><img src=\"circuit.png\" alt><br>对节点数量为N的CHNN网络，其神经元状态变量的动态变化可用下述非线性微分方程组来描述</p>\n<script type=\"math/tex; mode=display\">\n\\begin{align}\n&c_i\\frac{du_i}{dt}=\\sum_{j=1}^{N}T_{ij}v_{j}-\\frac{u_i}{R_i}+I_i, i=1,2,3,......,N\\\\\n&v_i=f_i(u_i), i=1,2,3,......,N\n\\end{align}</script><p>其中，$f(x)$为激励函数，$f(x)=\\frac{1}{2}[1+tanh(\\frac{x}{x_0})]$。<br>定义能量函数</p>\n<script type=\"math/tex; mode=display\">E=-\\frac{1}{2}\\sum_{i=1}^{N}\\sum_{j=1, j\\neq i}^{N}T_{ij}v_iv_j-\\sum_{i=1}^{N}v_iI_i+\\sum_{i=1}^{N}\\frac{1}{R_i}\\int_0^{v_i}f^{-1}(v)dv</script><p>CHNN能量函数的表达形式与物理意义的能量函数一致，用于表征网络状态的变化趋势。</p>\n<h2 id=\"两个结论\"><a href=\"#两个结论\" class=\"headerlink\" title=\"两个结论\"></a>两个结论</h2><p>并有如下结论（详细推导过程不赘述）</p>\n<ul>\n<li>结论1：$\\frac{\\partial E}{\\partial v_i}=-C_i\\frac{\\partial u_i}{\\partial t}$</li>\n<li>结论2：若函数$f(v)$是单调递增且连续的，并有$C_i&gt;0，T_{ij}=T_{ji}$，则随着网络状态的变化，有$\\frac{\\partial E}{\\partial t}≤0$，当且仅当$\\frac{\\partial v_i}{\\partial t}=0$时，$\\frac{\\partial E}{\\partial t}=0$。</li>\n</ul>\n<h1 id=\"利用CHNN求解TSP问题\"><a href=\"#利用CHNN求解TSP问题\" class=\"headerlink\" title=\"利用CHNN求解TSP问题\"></a>利用CHNN求解TSP问题</h1><h2 id=\"置换矩阵\"><a href=\"#置换矩阵\" class=\"headerlink\" title=\"置换矩阵\"></a>置换矩阵</h2><p>由于问题中要求每个城市要求均需访问一次且不重复，故采用置换矩阵表示路径顺序。</p>\n<ul>\n<li>置换矩阵<br>矩阵的每一行表示一个城市，每一列表示访问的顺序，用元素“1”表示访问，元素“0”表示没有访问。</li>\n</ul>\n<h2 id=\"求解思路\"><a href=\"#求解思路\" class=\"headerlink\" title=\"求解思路\"></a>求解思路</h2><p>基于以上结论，若将最优化问题的目标函数转换成网络的能量函数，把问题变量对应于网络状态，则可将CHNN网络用于解决优化组合问题。<br>在实际求解时，可根据状态方程反推出网络的结构，即$T_{ij}$、$I_i$等参数，然后在确定的网络下进行迭代求解。但当问题较为复杂时，往往比较难通过状态方程反推出网络结构，这时可利用上述重要结论，首先为网络输出赋初值，然后在每次迭代时求出状态方程的增量进行叠加，使网络的输出逐渐收敛。</p>\n<h2 id=\"能量函数\"><a href=\"#能量函数\" class=\"headerlink\" title=\"能量函数\"></a>能量函数</h2><p>TSP问题所用的能量函数可包含约束项和优化项。</p>\n<ul>\n<li>约束项<br>约束项主要保证每个城市均被访问且只能被访问1次，即输出矩阵为置换矩阵。可用数学形式表示如下<script type=\"math/tex; mode=display\">E_1=\\frac{A}{2}\\sum_{x=1}^{N}\\sum_{i=1}^{N-1}\\sum_{j=i+1}^{N}v_{xi}v_{xj}\n+\\frac{B}{2}\\sum_{i=1}^{N}\\sum_{x=1}^{N-1}\\sum_{y=x+1}^{N}v_{xi}v_{yi}\n+\\frac{C}{2}(\\sum_{x=1}^{N}\\sum_{i=1}^{N}v_{xi}-N)^2</script></li>\n<li>优化项<br>优化项使得总路程往最小化的方向变化。可表示如下<script type=\"math/tex; mode=display\">E_2=\\frac{D}{2}\\sum_{x=1}^{N}\\sum_{y\\neq x}^{N}\\sum_{i=1}^{N}d_{xy}v_{xi}(v_{y,i+1}+v_{y,i-1})</script></li>\n<li>总能量函数<br>总的能量函数为<script type=\"math/tex; mode=display\">\\begin{align}\nE=&\\frac{A}{2}\\sum_{x=1}^{N}\\sum_{i=1}^{N-1}\\sum_{j=i+1}^{N}v_{xi}v_{xj} \\\\\n&+\\frac{B}{2}\\sum_{i=1}^{N}\\sum_{x=1}^{N-1}\\sum_{y=x+1}^{N}v_{xi}v_{yi} \\\\\n&+\\frac{C}{2}(\\sum_{x=1}^{N}\\sum_{i=1}^{N}v_{xi}-N)^2 \\\\\n&+\\frac{D}{2}\\sum_{x=1}^{N}\\sum_{y\\neq x}^{N}\\sum_{i=1}^{N}d_{xy}v_{xi}(v_{y,i+1}+v_{y,i-1}) \\\\\n&+\\sum_{x=1}^{N}\\sum_{i=1}^{N}\\frac{1}{R_{xi}}\\int_0^{v_{xi}}f^{-1}(v)dv\n\\end{align}</script></li>\n</ul>\n<h2 id=\"动态方程\"><a href=\"#动态方程\" class=\"headerlink\" title=\"动态方程\"></a>动态方程</h2><p>根据结论1，可得到以下动态方程，该方程用于每次迭代时更新状态变量。</p>\n<script type=\"math/tex; mode=display\">\\begin{align}\nc_{xi}\\frac{du_{xi}}{dt}&=-\\frac{\\partial E}{\\partial v_{xi}}\\\\\n&=-\\frac{u_{xi}}{R_{xi}}-\\frac{A}{2}\\sum_{j=1,j\\neq i}^{N}v_{xj}-\\frac{B}{2}\\sum_{y=1,y\\neq x}^{N}y_{yi} \\\\\n&-C[\\sum_{x=1}^{N}\\sum_{i=1}^{N}v_{xi}-N]-\\frac{D}{2}\\sum_{y=1,y\\neq x}^{N}d_{xy}[v_{y,i+1}+v_{y,i-1}]\n\\end{align}</script><h1 id=\"算法实现\"><a href=\"#算法实现\" class=\"headerlink\" title=\"算法实现\"></a>算法实现</h1><h2 id=\"算法流程\"><a href=\"#算法流程\" class=\"headerlink\" title=\"算法流程\"></a>算法流程</h2><ol>\n<li>状态变量初始化<br>首先，按照下式为各状态变量赋随机初值<script type=\"math/tex; mode=display\">u_{xi}(t_0)=\\frac{1}{2}u_0ln(N-1)+\\Delta u_{xi}</script>其中，$\\Delta  u_{xi}$取区间$(-1,+1)$内的随机值。</li>\n<li>计算神经元输出<br>根据激励函数计算神经元的输出<script type=\"math/tex; mode=display\">v_{xi}(t_0+k\\Delta  t)=f[u_{xi}(t_0+k\\Delta t)]=\\frac{1}{2}{1+tanh[\\frac{u_{xi}(t_0+k\\Delta t)}{u_{0}}]}</script></li>\n<li>计算状态变量增量<br>得到神经元的输出后，可继续计算状态变量的增量<script type=\"math/tex; mode=display\">\\begin{align}\nc_{xi}\\frac{du_{xi}}{dt}=&-\\frac{u_{xi}(t_0+k\\Delta  t)}{R_{xi}}- \\\\\n&-\\frac{A}{2}\\sum_{j=1,j\\neq i}^{N}v_{xj}(t_0+k\\Delta  t) \\\\\n&-\\frac{B}{2}\\sum_{y=1,y\\neq x}^{N}y_{yi}(t_0+k\\Delta  t) \\\\\n&-C[\\sum_{x=1}^{N}\\sum_{i=1}^{N}v_{xi}(t_0+k\\Delta  t)-N] \\\\\n&-\\frac{D}{2}\\sum_{y=1,y\\neq x}^{N}d_{xy}[v_{y,i+1}(t_0+k\\Delta  t)+v_{y,i-1}(t_0+k\\Delta  t)]\n\\end{align}</script></li>\n<li>计算新的状态变量<br>将状态变量与上一时刻的状态变量叠加得到新的状态变量。</li>\n<li>计算能量<br>根据新的状态变量和神经元输出，代入网络能量表达式计算得到本次迭代后的能量。</li>\n<li>判断是否满足终止条件<br>当能量值不再变化或者迭代次数达到最大值时，则满足迭代收敛条件。但在实际操作中，能量值很难满足完全不变的要求，为提高求解效率，可计算两次迭代之间的能量变化量，当变化率小于某一阈值时认为能量不变。<br>若满足迭代终止条件，则进入下一步骤，否则返回步骤2继续迭代。</li>\n<li>检查解是否满足要求<br>检查解是否满足输出矩阵为置换矩阵，若不满足要求，则返回步骤1，否则输出求解结果。</li>\n</ol>\n<h2 id=\"源代码\"><a href=\"#源代码\" class=\"headerlink\" title=\"源代码\"></a>源代码</h2><p>请见Github：<br><a href=\"https://github.com/linjw1008/TSP_MATLAB\" target=\"_blank\" rel=\"noopener\">https://github.com/linjw1008/TSP_MATLAB</a><br>相关参数可以微调，达到更好的求解效果。</p>\n<h2 id=\"运行结果\"><a href=\"#运行结果\" class=\"headerlink\" title=\"运行结果\"></a>运行结果</h2><p><img src=\"result.bmp\" alt></p>\n","site":{"data":{}},"excerpt":"<p>最近一门人工神经网络的课程结课，利用Matlab做了一个小Project，在此分享。<br>","more":"</p>\n<h1 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h1><p>旅行商问题（Travelling salesman problem, TSP）：给定一系列城市和每对城市之间的距离，求解访问每一座城市一次并回到起始城市的最短回路。它是组合优化中的一个NP困难问题，很难通过枚举法求解，特别是在N较大的时候。但是通过神经网络或者其他启发式算法可以较好地解决该问题。</p>\n<h1 id=\"Hopfield网络\"><a href=\"#Hopfield网络\" class=\"headerlink\" title=\"Hopfield网络\"></a>Hopfield网络</h1><h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>Hopfield神经网络是一种递归神经网络，由约翰·霍普菲尔德等人在1982年发明。Hopfield网络是一种结合存储系统和二元系统的神经网络，有连续型与离散型之分。TSP问题可用连续型Hopfield网络（Continuous Hopfield Neural Network, CHNN）解决，故本文主要介绍CHNN网络。<br>CHNN可由一些简单的电子线路连接起来实现（Fun Fact：发明CHNN网络的人是搞物理的，网络实验也是在物理元件电路上进行的），如图所示，每个神经元均具有连续时间变化的输出值，并采用具有饱和非线性的运算放大器来模拟神经元的S型单调输入——输出关系。<br><img src=\"circuit.png\" alt><br>对节点数量为N的CHNN网络，其神经元状态变量的动态变化可用下述非线性微分方程组来描述</p>\n<script type=\"math/tex; mode=display\">\n\\begin{align}\n&c_i\\frac{du_i}{dt}=\\sum_{j=1}^{N}T_{ij}v_{j}-\\frac{u_i}{R_i}+I_i, i=1,2,3,......,N\\\\\n&v_i=f_i(u_i), i=1,2,3,......,N\n\\end{align}</script><p>其中，$f(x)$为激励函数，$f(x)=\\frac{1}{2}[1+tanh(\\frac{x}{x_0})]$。<br>定义能量函数</p>\n<script type=\"math/tex; mode=display\">E=-\\frac{1}{2}\\sum_{i=1}^{N}\\sum_{j=1, j\\neq i}^{N}T_{ij}v_iv_j-\\sum_{i=1}^{N}v_iI_i+\\sum_{i=1}^{N}\\frac{1}{R_i}\\int_0^{v_i}f^{-1}(v)dv</script><p>CHNN能量函数的表达形式与物理意义的能量函数一致，用于表征网络状态的变化趋势。</p>\n<h2 id=\"两个结论\"><a href=\"#两个结论\" class=\"headerlink\" title=\"两个结论\"></a>两个结论</h2><p>并有如下结论（详细推导过程不赘述）</p>\n<ul>\n<li>结论1：$\\frac{\\partial E}{\\partial v_i}=-C_i\\frac{\\partial u_i}{\\partial t}$</li>\n<li>结论2：若函数$f(v)$是单调递增且连续的，并有$C_i&gt;0，T_{ij}=T_{ji}$，则随着网络状态的变化，有$\\frac{\\partial E}{\\partial t}≤0$，当且仅当$\\frac{\\partial v_i}{\\partial t}=0$时，$\\frac{\\partial E}{\\partial t}=0$。</li>\n</ul>\n<h1 id=\"利用CHNN求解TSP问题\"><a href=\"#利用CHNN求解TSP问题\" class=\"headerlink\" title=\"利用CHNN求解TSP问题\"></a>利用CHNN求解TSP问题</h1><h2 id=\"置换矩阵\"><a href=\"#置换矩阵\" class=\"headerlink\" title=\"置换矩阵\"></a>置换矩阵</h2><p>由于问题中要求每个城市要求均需访问一次且不重复，故采用置换矩阵表示路径顺序。</p>\n<ul>\n<li>置换矩阵<br>矩阵的每一行表示一个城市，每一列表示访问的顺序，用元素“1”表示访问，元素“0”表示没有访问。</li>\n</ul>\n<h2 id=\"求解思路\"><a href=\"#求解思路\" class=\"headerlink\" title=\"求解思路\"></a>求解思路</h2><p>基于以上结论，若将最优化问题的目标函数转换成网络的能量函数，把问题变量对应于网络状态，则可将CHNN网络用于解决优化组合问题。<br>在实际求解时，可根据状态方程反推出网络的结构，即$T_{ij}$、$I_i$等参数，然后在确定的网络下进行迭代求解。但当问题较为复杂时，往往比较难通过状态方程反推出网络结构，这时可利用上述重要结论，首先为网络输出赋初值，然后在每次迭代时求出状态方程的增量进行叠加，使网络的输出逐渐收敛。</p>\n<h2 id=\"能量函数\"><a href=\"#能量函数\" class=\"headerlink\" title=\"能量函数\"></a>能量函数</h2><p>TSP问题所用的能量函数可包含约束项和优化项。</p>\n<ul>\n<li>约束项<br>约束项主要保证每个城市均被访问且只能被访问1次，即输出矩阵为置换矩阵。可用数学形式表示如下<script type=\"math/tex; mode=display\">E_1=\\frac{A}{2}\\sum_{x=1}^{N}\\sum_{i=1}^{N-1}\\sum_{j=i+1}^{N}v_{xi}v_{xj}\n+\\frac{B}{2}\\sum_{i=1}^{N}\\sum_{x=1}^{N-1}\\sum_{y=x+1}^{N}v_{xi}v_{yi}\n+\\frac{C}{2}(\\sum_{x=1}^{N}\\sum_{i=1}^{N}v_{xi}-N)^2</script></li>\n<li>优化项<br>优化项使得总路程往最小化的方向变化。可表示如下<script type=\"math/tex; mode=display\">E_2=\\frac{D}{2}\\sum_{x=1}^{N}\\sum_{y\\neq x}^{N}\\sum_{i=1}^{N}d_{xy}v_{xi}(v_{y,i+1}+v_{y,i-1})</script></li>\n<li>总能量函数<br>总的能量函数为<script type=\"math/tex; mode=display\">\\begin{align}\nE=&\\frac{A}{2}\\sum_{x=1}^{N}\\sum_{i=1}^{N-1}\\sum_{j=i+1}^{N}v_{xi}v_{xj} \\\\\n&+\\frac{B}{2}\\sum_{i=1}^{N}\\sum_{x=1}^{N-1}\\sum_{y=x+1}^{N}v_{xi}v_{yi} \\\\\n&+\\frac{C}{2}(\\sum_{x=1}^{N}\\sum_{i=1}^{N}v_{xi}-N)^2 \\\\\n&+\\frac{D}{2}\\sum_{x=1}^{N}\\sum_{y\\neq x}^{N}\\sum_{i=1}^{N}d_{xy}v_{xi}(v_{y,i+1}+v_{y,i-1}) \\\\\n&+\\sum_{x=1}^{N}\\sum_{i=1}^{N}\\frac{1}{R_{xi}}\\int_0^{v_{xi}}f^{-1}(v)dv\n\\end{align}</script></li>\n</ul>\n<h2 id=\"动态方程\"><a href=\"#动态方程\" class=\"headerlink\" title=\"动态方程\"></a>动态方程</h2><p>根据结论1，可得到以下动态方程，该方程用于每次迭代时更新状态变量。</p>\n<script type=\"math/tex; mode=display\">\\begin{align}\nc_{xi}\\frac{du_{xi}}{dt}&=-\\frac{\\partial E}{\\partial v_{xi}}\\\\\n&=-\\frac{u_{xi}}{R_{xi}}-\\frac{A}{2}\\sum_{j=1,j\\neq i}^{N}v_{xj}-\\frac{B}{2}\\sum_{y=1,y\\neq x}^{N}y_{yi} \\\\\n&-C[\\sum_{x=1}^{N}\\sum_{i=1}^{N}v_{xi}-N]-\\frac{D}{2}\\sum_{y=1,y\\neq x}^{N}d_{xy}[v_{y,i+1}+v_{y,i-1}]\n\\end{align}</script><h1 id=\"算法实现\"><a href=\"#算法实现\" class=\"headerlink\" title=\"算法实现\"></a>算法实现</h1><h2 id=\"算法流程\"><a href=\"#算法流程\" class=\"headerlink\" title=\"算法流程\"></a>算法流程</h2><ol>\n<li>状态变量初始化<br>首先，按照下式为各状态变量赋随机初值<script type=\"math/tex; mode=display\">u_{xi}(t_0)=\\frac{1}{2}u_0ln(N-1)+\\Delta u_{xi}</script>其中，$\\Delta  u_{xi}$取区间$(-1,+1)$内的随机值。</li>\n<li>计算神经元输出<br>根据激励函数计算神经元的输出<script type=\"math/tex; mode=display\">v_{xi}(t_0+k\\Delta  t)=f[u_{xi}(t_0+k\\Delta t)]=\\frac{1}{2}{1+tanh[\\frac{u_{xi}(t_0+k\\Delta t)}{u_{0}}]}</script></li>\n<li>计算状态变量增量<br>得到神经元的输出后，可继续计算状态变量的增量<script type=\"math/tex; mode=display\">\\begin{align}\nc_{xi}\\frac{du_{xi}}{dt}=&-\\frac{u_{xi}(t_0+k\\Delta  t)}{R_{xi}}- \\\\\n&-\\frac{A}{2}\\sum_{j=1,j\\neq i}^{N}v_{xj}(t_0+k\\Delta  t) \\\\\n&-\\frac{B}{2}\\sum_{y=1,y\\neq x}^{N}y_{yi}(t_0+k\\Delta  t) \\\\\n&-C[\\sum_{x=1}^{N}\\sum_{i=1}^{N}v_{xi}(t_0+k\\Delta  t)-N] \\\\\n&-\\frac{D}{2}\\sum_{y=1,y\\neq x}^{N}d_{xy}[v_{y,i+1}(t_0+k\\Delta  t)+v_{y,i-1}(t_0+k\\Delta  t)]\n\\end{align}</script></li>\n<li>计算新的状态变量<br>将状态变量与上一时刻的状态变量叠加得到新的状态变量。</li>\n<li>计算能量<br>根据新的状态变量和神经元输出，代入网络能量表达式计算得到本次迭代后的能量。</li>\n<li>判断是否满足终止条件<br>当能量值不再变化或者迭代次数达到最大值时，则满足迭代收敛条件。但在实际操作中，能量值很难满足完全不变的要求，为提高求解效率，可计算两次迭代之间的能量变化量，当变化率小于某一阈值时认为能量不变。<br>若满足迭代终止条件，则进入下一步骤，否则返回步骤2继续迭代。</li>\n<li>检查解是否满足要求<br>检查解是否满足输出矩阵为置换矩阵，若不满足要求，则返回步骤1，否则输出求解结果。</li>\n</ol>\n<h2 id=\"源代码\"><a href=\"#源代码\" class=\"headerlink\" title=\"源代码\"></a>源代码</h2><p>请见Github：<br><a href=\"https://github.com/linjw1008/TSP_MATLAB\" target=\"_blank\" rel=\"noopener\">https://github.com/linjw1008/TSP_MATLAB</a><br>相关参数可以微调，达到更好的求解效果。</p>\n<h2 id=\"运行结果\"><a href=\"#运行结果\" class=\"headerlink\" title=\"运行结果\"></a>运行结果</h2><p><img src=\"result.bmp\" alt></p>"},{"title":"Matlab/Simulink模型代数环错误防止与解决","date":"2019-03-06T04:49:45.000Z","_content":"","source":"_drafts/Matlab-Simulink模型代数环错误防止与解决.md","raw":"---\ntitle: Matlab/Simulink模型代数环错误防止与解决\ndate: 2019-03-06 12:49:45\ntags:\n---\n","slug":"Matlab-Simulink模型代数环错误防止与解决","published":0,"updated":"2019-03-06T04:49:45.832Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckkdqtlpk0008e8ulslveobaq","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"并查集代码实现+详细注释（C++）","date":"2021-01-25T14:04:53.000Z","_content":"# 问题定义\n并查集是一种树型的数据结构，用于处理一些不交集的合并及查询问题。\n有两种操作并查集的操作。一是Find（查找），用于确定某个元素属于哪个子集；二是Union（联合），用于将两个子集合并成一个集合。上述两种算法也称为联合-查找算法。\n<!-- more -->\n# 算法\n对于并查集，需要解决两个问题，数据结构的表示方法以及联合-查找算法的具体实现。\n## 数据结构\n首先需要明确的有\n* 在并查集中可能有多个子集，每个子集形成一个树形结构。通过树形结构的根节点来区分子集，每个根节点与子集一一对应。\n* 对于每一个节点，我们只关心这个节点本身，以及它的祖先节点。其中祖先节点的作用是标记某个节点属于哪一个子集。\n\n因此一般可以用一维数组来表示并查集。\n* 数组的每一个元素对应一个节点。\n* 元素的下标用于区分节点，元素的值用于表示对应节点的祖先节点，也即表示了节点属于哪一个子集。\n* 根节点的父节点是它本身。\n* 初始状态下，并查集的节点之间没有亲缘关系，即每个节点的初始根节点都是它本身。\n\n举例：设数组F。若有F[a] = b，则表示节点a的祖先节点是b。\n## 查找算法\n作用：给定某个节点，查找该节点的根节点。\n### 方法一：普通算法\n对于每个节点，我们可以知道该节点的祖先节点，从该节点的祖先节点出发，不断向上寻找，直到根节点。可用递归实现。\n方法一较为简单，但是在树的深度较大时，寻找的路径较长，且每次查找同一个节点均需重复遍历相同的路径，时间复杂度较高。由于查找算法的最终目的是获取根节点，即不关心查找路径中的其它节点，故可以设法对查找路径进行压缩。\n### 方法二：带路径压缩的算法\n在方法一的基础上进行改进，同样采用递归的方式获取根节点，但是获取到根节点后不直接返回，而是先将被查询节点的祖先节点设置为根节点，然后再返回。这样下次再查询相同节点时，便可直接找到根节点，起到路径压缩的作用。\n举例：被查找的节点为a，其祖先节点为b，查找到根节点r，则将a的祖先节点直接设置为r，即F[a] = r，然后再返回根节点r。\n## 联合算法\n作用：给定节点a和节点b，将节点a所在的子集和节点b所在的子集合并为一个集合。\n### 方法一：普通算法\n先利用查找算法分别找到节点a和b的根节点rootA和rootB。然后将其中一个根节点设置为另一个根节点的子节点，即F[rootA]=rootB（将rootA设置为rootB的子节点）或F[rootB]=rootA（将rootB设置为rootA的子节点）。\n方法一中，对于将哪一个根节点作为子节点并无要求，这样的话就可能出现深度较大的子集合并到深度较小的子集的情况，导致新集合的深度更大，从而增大了查找路径。\n### 方法二：按秩合并的算法\n新增一个数组rank，用于记录每个节点的深度（秩）。同样先利用查找算法找到根节点，然后比较两个根节点的深度，将深度较小的根节点作为另一个根节点的子节点。合并完成后再相应地更新rank数组。\n# C++实现\n## 普通算法\n```cpp\n#include <vector>\n#include <iostream>\n\nusing namespace std;\n\nclass UnionFind {\nprivate:\n    vector<int> father;\n\npublic:\n    UnionFind(int n) {\n        // 初始化，将每个节点的根节点设置为它本身，即每个节点都代表一个独立的子集\n        father.resize(n);\n        for (int i = 0; i < n; ++i) father[i] = i;\n    }\n\n    int find(int x) {\n        if (x == father[x]) return x; // 找到根节点，直接返回\n        return find(father[x]); // 未找到根节点，继续向上递归\n    }\n\n    void merge(int a, int b) {\n        int rootOfA = find(a), rootOfB = find(b); // 分别找到两个节点的根节点\n        father[rootOfA] = rootOfB; // 将其中一个根节点设置为另一个的子节点\n    }\n};\n```\n## 路径压缩算法\n这里只展示`int find(int x)`方法的实现。\n```cpp\nint find(int x) {\n    if (x == father[x]) return x; // 找到根节点，直接返回\n    father[x] = find(father[x]); // 未找到根节点，继续向上递归，找到根节点后进行路径压缩\n    return father[x];\n}\n```\n## 按秩合并算法\n这里只展示与普通算法的不同。\n```cpp\n#include <vector>\n#include <iostream>\n\nusing namespace std;\n\nclass UnionFind {\nprivate:\n    vector<int> father;\n    vector<int> rank;\n\npublic:\n    UnionFind(int n) {\n        // 初始化，将每个节点的根节点设置为它本身，即每个节点都代表一个独立的子集。并将每个节点的秩都设置为1\n        father.resize(n);\n        for (int i = 0; i < n; ++i) father[i] = i;\n        rank.resize(n, 1);\n    }\n\n    // 省略.....\n\n    void merge(int a, int b) {\n        int rootOfA = find(a), rootOfB = find(b); // 分别找到两个节点的根节点\n        if (rank[rootOfA] <= rank[rootOfB]) father[rootOfA] = rootOfB; // rootA的秩较小，将它作为rootB的子节点\n        else father[rootOfB] = rootOfA; // 反之将rootB作为rootA的子节点\n        if (rank[rootOfA] == rank[rootOfB]) rank[rootOfB]++; // 如果秩相同，必定有其中一个根节点的秩增大，这里根据24行的具体实现可知是节点rootB的秩增大\n    }\n};\n```\n# 应用\n* [LeetCode 959. 由斜杠划分区域](https://leetcode-cn.com/problems/regions-cut-by-slashes/)\n\n# 参考资料\n1. [算法学习笔记(1) : 并查集](https://zhuanlan.zhihu.com/p/93647900)\n2. [并查集- 维基百科，自由的百科全书](https://zh.wikipedia.org/wiki/%E5%B9%B6%E6%9F%A5%E9%9B%86)","source":"_posts/2021-01-25-并查集代码实现-详细注释（C-）.md","raw":"---\ntitle: 并查集代码实现+详细注释（C++）\ndate: 2021-01-25 22:04:53\ntags:\n  - 数据结构与算法\ncategories:\n  - 学习笔记\n---\n# 问题定义\n并查集是一种树型的数据结构，用于处理一些不交集的合并及查询问题。\n有两种操作并查集的操作。一是Find（查找），用于确定某个元素属于哪个子集；二是Union（联合），用于将两个子集合并成一个集合。上述两种算法也称为联合-查找算法。\n<!-- more -->\n# 算法\n对于并查集，需要解决两个问题，数据结构的表示方法以及联合-查找算法的具体实现。\n## 数据结构\n首先需要明确的有\n* 在并查集中可能有多个子集，每个子集形成一个树形结构。通过树形结构的根节点来区分子集，每个根节点与子集一一对应。\n* 对于每一个节点，我们只关心这个节点本身，以及它的祖先节点。其中祖先节点的作用是标记某个节点属于哪一个子集。\n\n因此一般可以用一维数组来表示并查集。\n* 数组的每一个元素对应一个节点。\n* 元素的下标用于区分节点，元素的值用于表示对应节点的祖先节点，也即表示了节点属于哪一个子集。\n* 根节点的父节点是它本身。\n* 初始状态下，并查集的节点之间没有亲缘关系，即每个节点的初始根节点都是它本身。\n\n举例：设数组F。若有F[a] = b，则表示节点a的祖先节点是b。\n## 查找算法\n作用：给定某个节点，查找该节点的根节点。\n### 方法一：普通算法\n对于每个节点，我们可以知道该节点的祖先节点，从该节点的祖先节点出发，不断向上寻找，直到根节点。可用递归实现。\n方法一较为简单，但是在树的深度较大时，寻找的路径较长，且每次查找同一个节点均需重复遍历相同的路径，时间复杂度较高。由于查找算法的最终目的是获取根节点，即不关心查找路径中的其它节点，故可以设法对查找路径进行压缩。\n### 方法二：带路径压缩的算法\n在方法一的基础上进行改进，同样采用递归的方式获取根节点，但是获取到根节点后不直接返回，而是先将被查询节点的祖先节点设置为根节点，然后再返回。这样下次再查询相同节点时，便可直接找到根节点，起到路径压缩的作用。\n举例：被查找的节点为a，其祖先节点为b，查找到根节点r，则将a的祖先节点直接设置为r，即F[a] = r，然后再返回根节点r。\n## 联合算法\n作用：给定节点a和节点b，将节点a所在的子集和节点b所在的子集合并为一个集合。\n### 方法一：普通算法\n先利用查找算法分别找到节点a和b的根节点rootA和rootB。然后将其中一个根节点设置为另一个根节点的子节点，即F[rootA]=rootB（将rootA设置为rootB的子节点）或F[rootB]=rootA（将rootB设置为rootA的子节点）。\n方法一中，对于将哪一个根节点作为子节点并无要求，这样的话就可能出现深度较大的子集合并到深度较小的子集的情况，导致新集合的深度更大，从而增大了查找路径。\n### 方法二：按秩合并的算法\n新增一个数组rank，用于记录每个节点的深度（秩）。同样先利用查找算法找到根节点，然后比较两个根节点的深度，将深度较小的根节点作为另一个根节点的子节点。合并完成后再相应地更新rank数组。\n# C++实现\n## 普通算法\n```cpp\n#include <vector>\n#include <iostream>\n\nusing namespace std;\n\nclass UnionFind {\nprivate:\n    vector<int> father;\n\npublic:\n    UnionFind(int n) {\n        // 初始化，将每个节点的根节点设置为它本身，即每个节点都代表一个独立的子集\n        father.resize(n);\n        for (int i = 0; i < n; ++i) father[i] = i;\n    }\n\n    int find(int x) {\n        if (x == father[x]) return x; // 找到根节点，直接返回\n        return find(father[x]); // 未找到根节点，继续向上递归\n    }\n\n    void merge(int a, int b) {\n        int rootOfA = find(a), rootOfB = find(b); // 分别找到两个节点的根节点\n        father[rootOfA] = rootOfB; // 将其中一个根节点设置为另一个的子节点\n    }\n};\n```\n## 路径压缩算法\n这里只展示`int find(int x)`方法的实现。\n```cpp\nint find(int x) {\n    if (x == father[x]) return x; // 找到根节点，直接返回\n    father[x] = find(father[x]); // 未找到根节点，继续向上递归，找到根节点后进行路径压缩\n    return father[x];\n}\n```\n## 按秩合并算法\n这里只展示与普通算法的不同。\n```cpp\n#include <vector>\n#include <iostream>\n\nusing namespace std;\n\nclass UnionFind {\nprivate:\n    vector<int> father;\n    vector<int> rank;\n\npublic:\n    UnionFind(int n) {\n        // 初始化，将每个节点的根节点设置为它本身，即每个节点都代表一个独立的子集。并将每个节点的秩都设置为1\n        father.resize(n);\n        for (int i = 0; i < n; ++i) father[i] = i;\n        rank.resize(n, 1);\n    }\n\n    // 省略.....\n\n    void merge(int a, int b) {\n        int rootOfA = find(a), rootOfB = find(b); // 分别找到两个节点的根节点\n        if (rank[rootOfA] <= rank[rootOfB]) father[rootOfA] = rootOfB; // rootA的秩较小，将它作为rootB的子节点\n        else father[rootOfB] = rootOfA; // 反之将rootB作为rootA的子节点\n        if (rank[rootOfA] == rank[rootOfB]) rank[rootOfB]++; // 如果秩相同，必定有其中一个根节点的秩增大，这里根据24行的具体实现可知是节点rootB的秩增大\n    }\n};\n```\n# 应用\n* [LeetCode 959. 由斜杠划分区域](https://leetcode-cn.com/problems/regions-cut-by-slashes/)\n\n# 参考资料\n1. [算法学习笔记(1) : 并查集](https://zhuanlan.zhihu.com/p/93647900)\n2. [并查集- 维基百科，自由的百科全书](https://zh.wikipedia.org/wiki/%E5%B9%B6%E6%9F%A5%E9%9B%86)","slug":"并查集代码实现-详细注释（C-）","published":1,"updated":"2021-01-26T08:30:27.211Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckkdqtlpl0009e8ulhws1qpp5","content":"<h1 id=\"问题定义\"><a href=\"#问题定义\" class=\"headerlink\" title=\"问题定义\"></a>问题定义</h1><p>并查集是一种树型的数据结构，用于处理一些不交集的合并及查询问题。<br>有两种操作并查集的操作。一是Find（查找），用于确定某个元素属于哪个子集；二是Union（联合），用于将两个子集合并成一个集合。上述两种算法也称为联合-查找算法。<br><a id=\"more\"></a></p>\n<h1 id=\"算法\"><a href=\"#算法\" class=\"headerlink\" title=\"算法\"></a>算法</h1><p>对于并查集，需要解决两个问题，数据结构的表示方法以及联合-查找算法的具体实现。</p>\n<h2 id=\"数据结构\"><a href=\"#数据结构\" class=\"headerlink\" title=\"数据结构\"></a>数据结构</h2><p>首先需要明确的有</p>\n<ul>\n<li>在并查集中可能有多个子集，每个子集形成一个树形结构。通过树形结构的根节点来区分子集，每个根节点与子集一一对应。</li>\n<li>对于每一个节点，我们只关心这个节点本身，以及它的祖先节点。其中祖先节点的作用是标记某个节点属于哪一个子集。</li>\n</ul>\n<p>因此一般可以用一维数组来表示并查集。</p>\n<ul>\n<li>数组的每一个元素对应一个节点。</li>\n<li>元素的下标用于区分节点，元素的值用于表示对应节点的祖先节点，也即表示了节点属于哪一个子集。</li>\n<li>根节点的父节点是它本身。</li>\n<li>初始状态下，并查集的节点之间没有亲缘关系，即每个节点的初始根节点都是它本身。</li>\n</ul>\n<p>举例：设数组F。若有F[a] = b，则表示节点a的祖先节点是b。</p>\n<h2 id=\"查找算法\"><a href=\"#查找算法\" class=\"headerlink\" title=\"查找算法\"></a>查找算法</h2><p>作用：给定某个节点，查找该节点的根节点。</p>\n<h3 id=\"方法一：普通算法\"><a href=\"#方法一：普通算法\" class=\"headerlink\" title=\"方法一：普通算法\"></a>方法一：普通算法</h3><p>对于每个节点，我们可以知道该节点的祖先节点，从该节点的祖先节点出发，不断向上寻找，直到根节点。可用递归实现。<br>方法一较为简单，但是在树的深度较大时，寻找的路径较长，且每次查找同一个节点均需重复遍历相同的路径，时间复杂度较高。由于查找算法的最终目的是获取根节点，即不关心查找路径中的其它节点，故可以设法对查找路径进行压缩。</p>\n<h3 id=\"方法二：带路径压缩的算法\"><a href=\"#方法二：带路径压缩的算法\" class=\"headerlink\" title=\"方法二：带路径压缩的算法\"></a>方法二：带路径压缩的算法</h3><p>在方法一的基础上进行改进，同样采用递归的方式获取根节点，但是获取到根节点后不直接返回，而是先将被查询节点的祖先节点设置为根节点，然后再返回。这样下次再查询相同节点时，便可直接找到根节点，起到路径压缩的作用。<br>举例：被查找的节点为a，其祖先节点为b，查找到根节点r，则将a的祖先节点直接设置为r，即F[a] = r，然后再返回根节点r。</p>\n<h2 id=\"联合算法\"><a href=\"#联合算法\" class=\"headerlink\" title=\"联合算法\"></a>联合算法</h2><p>作用：给定节点a和节点b，将节点a所在的子集和节点b所在的子集合并为一个集合。</p>\n<h3 id=\"方法一：普通算法-1\"><a href=\"#方法一：普通算法-1\" class=\"headerlink\" title=\"方法一：普通算法\"></a>方法一：普通算法</h3><p>先利用查找算法分别找到节点a和b的根节点rootA和rootB。然后将其中一个根节点设置为另一个根节点的子节点，即F[rootA]=rootB（将rootA设置为rootB的子节点）或F[rootB]=rootA（将rootB设置为rootA的子节点）。<br>方法一中，对于将哪一个根节点作为子节点并无要求，这样的话就可能出现深度较大的子集合并到深度较小的子集的情况，导致新集合的深度更大，从而增大了查找路径。</p>\n<h3 id=\"方法二：按秩合并的算法\"><a href=\"#方法二：按秩合并的算法\" class=\"headerlink\" title=\"方法二：按秩合并的算法\"></a>方法二：按秩合并的算法</h3><p>新增一个数组rank，用于记录每个节点的深度（秩）。同样先利用查找算法找到根节点，然后比较两个根节点的深度，将深度较小的根节点作为另一个根节点的子节点。合并完成后再相应地更新rank数组。</p>\n<h1 id=\"C-实现\"><a href=\"#C-实现\" class=\"headerlink\" title=\"C++实现\"></a>C++实现</h1><h2 id=\"普通算法\"><a href=\"#普通算法\" class=\"headerlink\" title=\"普通算法\"></a>普通算法</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UnionFind</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; father;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    UnionFind(<span class=\"keyword\">int</span> n) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 初始化，将每个节点的根节点设置为它本身，即每个节点都代表一个独立的子集</span></span><br><span class=\"line\">        father.resize(n);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; ++i) father[i] = i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">find</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (x == father[x]) <span class=\"keyword\">return</span> x; <span class=\"comment\">// 找到根节点，直接返回</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> find(father[x]); <span class=\"comment\">// 未找到根节点，继续向上递归</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">merge</span><span class=\"params\">(<span class=\"keyword\">int</span> a, <span class=\"keyword\">int</span> b)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> rootOfA = find(a), rootOfB = find(b); <span class=\"comment\">// 分别找到两个节点的根节点</span></span><br><span class=\"line\">        father[rootOfA] = rootOfB; <span class=\"comment\">// 将其中一个根节点设置为另一个的子节点</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h2 id=\"路径压缩算法\"><a href=\"#路径压缩算法\" class=\"headerlink\" title=\"路径压缩算法\"></a>路径压缩算法</h2><p>这里只展示<code>int find(int x)</code>方法的实现。<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">find</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (x == father[x]) <span class=\"keyword\">return</span> x; <span class=\"comment\">// 找到根节点，直接返回</span></span><br><span class=\"line\">    father[x] = find(father[x]); <span class=\"comment\">// 未找到根节点，继续向上递归，找到根节点后进行路径压缩</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> father[x];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"按秩合并算法\"><a href=\"#按秩合并算法\" class=\"headerlink\" title=\"按秩合并算法\"></a>按秩合并算法</h2><p>这里只展示与普通算法的不同。<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UnionFind</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; father;</span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; rank;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    UnionFind(<span class=\"keyword\">int</span> n) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 初始化，将每个节点的根节点设置为它本身，即每个节点都代表一个独立的子集。并将每个节点的秩都设置为1</span></span><br><span class=\"line\">        father.resize(n);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; ++i) father[i] = i;</span><br><span class=\"line\">        rank.resize(n, <span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 省略.....</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">merge</span><span class=\"params\">(<span class=\"keyword\">int</span> a, <span class=\"keyword\">int</span> b)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> rootOfA = find(a), rootOfB = find(b); <span class=\"comment\">// 分别找到两个节点的根节点</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (rank[rootOfA] &lt;= rank[rootOfB]) father[rootOfA] = rootOfB; <span class=\"comment\">// rootA的秩较小，将它作为rootB的子节点</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span> father[rootOfB] = rootOfA; <span class=\"comment\">// 反之将rootB作为rootA的子节点</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (rank[rootOfA] == rank[rootOfB]) rank[rootOfB]++; <span class=\"comment\">// 如果秩相同，必定有其中一个根节点的秩增大，这里根据24行的具体实现可知是节点rootB的秩增大</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"应用\"><a href=\"#应用\" class=\"headerlink\" title=\"应用\"></a>应用</h1><ul>\n<li><a href=\"https://leetcode-cn.com/problems/regions-cut-by-slashes/\" target=\"_blank\" rel=\"noopener\">LeetCode 959. 由斜杠划分区域</a></li>\n</ul>\n<h1 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h1><ol>\n<li><a href=\"https://zhuanlan.zhihu.com/p/93647900\" target=\"_blank\" rel=\"noopener\">算法学习笔记(1) : 并查集</a></li>\n<li><a href=\"https://zh.wikipedia.org/wiki/%E5%B9%B6%E6%9F%A5%E9%9B%86\" target=\"_blank\" rel=\"noopener\">并查集- 维基百科，自由的百科全书</a></li>\n</ol>\n","site":{"data":{}},"excerpt":"<h1 id=\"问题定义\"><a href=\"#问题定义\" class=\"headerlink\" title=\"问题定义\"></a>问题定义</h1><p>并查集是一种树型的数据结构，用于处理一些不交集的合并及查询问题。<br>有两种操作并查集的操作。一是Find（查找），用于确定某个元素属于哪个子集；二是Union（联合），用于将两个子集合并成一个集合。上述两种算法也称为联合-查找算法。<br>","more":"</p>\n<h1 id=\"算法\"><a href=\"#算法\" class=\"headerlink\" title=\"算法\"></a>算法</h1><p>对于并查集，需要解决两个问题，数据结构的表示方法以及联合-查找算法的具体实现。</p>\n<h2 id=\"数据结构\"><a href=\"#数据结构\" class=\"headerlink\" title=\"数据结构\"></a>数据结构</h2><p>首先需要明确的有</p>\n<ul>\n<li>在并查集中可能有多个子集，每个子集形成一个树形结构。通过树形结构的根节点来区分子集，每个根节点与子集一一对应。</li>\n<li>对于每一个节点，我们只关心这个节点本身，以及它的祖先节点。其中祖先节点的作用是标记某个节点属于哪一个子集。</li>\n</ul>\n<p>因此一般可以用一维数组来表示并查集。</p>\n<ul>\n<li>数组的每一个元素对应一个节点。</li>\n<li>元素的下标用于区分节点，元素的值用于表示对应节点的祖先节点，也即表示了节点属于哪一个子集。</li>\n<li>根节点的父节点是它本身。</li>\n<li>初始状态下，并查集的节点之间没有亲缘关系，即每个节点的初始根节点都是它本身。</li>\n</ul>\n<p>举例：设数组F。若有F[a] = b，则表示节点a的祖先节点是b。</p>\n<h2 id=\"查找算法\"><a href=\"#查找算法\" class=\"headerlink\" title=\"查找算法\"></a>查找算法</h2><p>作用：给定某个节点，查找该节点的根节点。</p>\n<h3 id=\"方法一：普通算法\"><a href=\"#方法一：普通算法\" class=\"headerlink\" title=\"方法一：普通算法\"></a>方法一：普通算法</h3><p>对于每个节点，我们可以知道该节点的祖先节点，从该节点的祖先节点出发，不断向上寻找，直到根节点。可用递归实现。<br>方法一较为简单，但是在树的深度较大时，寻找的路径较长，且每次查找同一个节点均需重复遍历相同的路径，时间复杂度较高。由于查找算法的最终目的是获取根节点，即不关心查找路径中的其它节点，故可以设法对查找路径进行压缩。</p>\n<h3 id=\"方法二：带路径压缩的算法\"><a href=\"#方法二：带路径压缩的算法\" class=\"headerlink\" title=\"方法二：带路径压缩的算法\"></a>方法二：带路径压缩的算法</h3><p>在方法一的基础上进行改进，同样采用递归的方式获取根节点，但是获取到根节点后不直接返回，而是先将被查询节点的祖先节点设置为根节点，然后再返回。这样下次再查询相同节点时，便可直接找到根节点，起到路径压缩的作用。<br>举例：被查找的节点为a，其祖先节点为b，查找到根节点r，则将a的祖先节点直接设置为r，即F[a] = r，然后再返回根节点r。</p>\n<h2 id=\"联合算法\"><a href=\"#联合算法\" class=\"headerlink\" title=\"联合算法\"></a>联合算法</h2><p>作用：给定节点a和节点b，将节点a所在的子集和节点b所在的子集合并为一个集合。</p>\n<h3 id=\"方法一：普通算法-1\"><a href=\"#方法一：普通算法-1\" class=\"headerlink\" title=\"方法一：普通算法\"></a>方法一：普通算法</h3><p>先利用查找算法分别找到节点a和b的根节点rootA和rootB。然后将其中一个根节点设置为另一个根节点的子节点，即F[rootA]=rootB（将rootA设置为rootB的子节点）或F[rootB]=rootA（将rootB设置为rootA的子节点）。<br>方法一中，对于将哪一个根节点作为子节点并无要求，这样的话就可能出现深度较大的子集合并到深度较小的子集的情况，导致新集合的深度更大，从而增大了查找路径。</p>\n<h3 id=\"方法二：按秩合并的算法\"><a href=\"#方法二：按秩合并的算法\" class=\"headerlink\" title=\"方法二：按秩合并的算法\"></a>方法二：按秩合并的算法</h3><p>新增一个数组rank，用于记录每个节点的深度（秩）。同样先利用查找算法找到根节点，然后比较两个根节点的深度，将深度较小的根节点作为另一个根节点的子节点。合并完成后再相应地更新rank数组。</p>\n<h1 id=\"C-实现\"><a href=\"#C-实现\" class=\"headerlink\" title=\"C++实现\"></a>C++实现</h1><h2 id=\"普通算法\"><a href=\"#普通算法\" class=\"headerlink\" title=\"普通算法\"></a>普通算法</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UnionFind</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; father;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    UnionFind(<span class=\"keyword\">int</span> n) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 初始化，将每个节点的根节点设置为它本身，即每个节点都代表一个独立的子集</span></span><br><span class=\"line\">        father.resize(n);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; ++i) father[i] = i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">find</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (x == father[x]) <span class=\"keyword\">return</span> x; <span class=\"comment\">// 找到根节点，直接返回</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> find(father[x]); <span class=\"comment\">// 未找到根节点，继续向上递归</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">merge</span><span class=\"params\">(<span class=\"keyword\">int</span> a, <span class=\"keyword\">int</span> b)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> rootOfA = find(a), rootOfB = find(b); <span class=\"comment\">// 分别找到两个节点的根节点</span></span><br><span class=\"line\">        father[rootOfA] = rootOfB; <span class=\"comment\">// 将其中一个根节点设置为另一个的子节点</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h2 id=\"路径压缩算法\"><a href=\"#路径压缩算法\" class=\"headerlink\" title=\"路径压缩算法\"></a>路径压缩算法</h2><p>这里只展示<code>int find(int x)</code>方法的实现。<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">find</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (x == father[x]) <span class=\"keyword\">return</span> x; <span class=\"comment\">// 找到根节点，直接返回</span></span><br><span class=\"line\">    father[x] = find(father[x]); <span class=\"comment\">// 未找到根节点，继续向上递归，找到根节点后进行路径压缩</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> father[x];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"按秩合并算法\"><a href=\"#按秩合并算法\" class=\"headerlink\" title=\"按秩合并算法\"></a>按秩合并算法</h2><p>这里只展示与普通算法的不同。<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UnionFind</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; father;</span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; rank;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    UnionFind(<span class=\"keyword\">int</span> n) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 初始化，将每个节点的根节点设置为它本身，即每个节点都代表一个独立的子集。并将每个节点的秩都设置为1</span></span><br><span class=\"line\">        father.resize(n);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; ++i) father[i] = i;</span><br><span class=\"line\">        rank.resize(n, <span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 省略.....</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">merge</span><span class=\"params\">(<span class=\"keyword\">int</span> a, <span class=\"keyword\">int</span> b)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> rootOfA = find(a), rootOfB = find(b); <span class=\"comment\">// 分别找到两个节点的根节点</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (rank[rootOfA] &lt;= rank[rootOfB]) father[rootOfA] = rootOfB; <span class=\"comment\">// rootA的秩较小，将它作为rootB的子节点</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span> father[rootOfB] = rootOfA; <span class=\"comment\">// 反之将rootB作为rootA的子节点</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (rank[rootOfA] == rank[rootOfB]) rank[rootOfB]++; <span class=\"comment\">// 如果秩相同，必定有其中一个根节点的秩增大，这里根据24行的具体实现可知是节点rootB的秩增大</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"应用\"><a href=\"#应用\" class=\"headerlink\" title=\"应用\"></a>应用</h1><ul>\n<li><a href=\"https://leetcode-cn.com/problems/regions-cut-by-slashes/\" target=\"_blank\" rel=\"noopener\">LeetCode 959. 由斜杠划分区域</a></li>\n</ul>\n<h1 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h1><ol>\n<li><a href=\"https://zhuanlan.zhihu.com/p/93647900\" target=\"_blank\" rel=\"noopener\">算法学习笔记(1) : 并查集</a></li>\n<li><a href=\"https://zh.wikipedia.org/wiki/%E5%B9%B6%E6%9F%A5%E9%9B%86\" target=\"_blank\" rel=\"noopener\">并查集- 维基百科，自由的百科全书</a></li>\n</ol>"}],"PostAsset":[{"_id":"source/_posts/2019-03-02-基于CHNN的旅行商问题/circuit.png","post":"ckkdqtlp90004e8uluagfubvj","slug":"circuit.png","modified":1,"renderable":1},{"_id":"source/_posts/2019-03-02-基于CHNN的旅行商问题/result.bmp","slug":"result.bmp","post":"ckkdqtlp90004e8uluagfubvj","modified":1,"renderable":0}],"PostCategory":[{"post_id":"ckkdqtlpl0009e8ulhws1qpp5","category_id":"ckkdqtlpg0006e8ulx3eyql9d","_id":"ckkdqtlpq000ce8ul5h3k4sqr"},{"post_id":"ckkdqtlp40002e8ul63bm8gye","category_id":"ckkdqtlpg0006e8ulx3eyql9d","_id":"ckkdqtlpu000ee8ul6ooemw7y"},{"post_id":"ckkdqtlp90004e8uluagfubvj","category_id":"ckkdqtlpg0006e8ulx3eyql9d","_id":"ckkdqtlpx000fe8ulbxf214tz"}],"PostTag":[{"post_id":"ckkdqtlp40002e8ul63bm8gye","tag_id":"ckkdqtlpj0007e8uloj63shi4","_id":"ckkdqtlpz000he8uln72tyjog"},{"post_id":"ckkdqtlp40002e8ul63bm8gye","tag_id":"ckkdqtlpn000be8ulrihxejde","_id":"ckkdqtlq0000ie8ulnn4gqroh"},{"post_id":"ckkdqtlp40002e8ul63bm8gye","tag_id":"ckkdqtlpt000de8ulxv0djfq2","_id":"ckkdqtlq1000ke8uliza9x0xv"},{"post_id":"ckkdqtlp90004e8uluagfubvj","tag_id":"ckkdqtlpy000ge8ul759ou96r","_id":"ckkdqtlq3000me8ulz9tfk9bv"},{"post_id":"ckkdqtlp90004e8uluagfubvj","tag_id":"ckkdqtlq1000je8ulcklqsqpz","_id":"ckkdqtlq4000ne8ullx0hssm4"},{"post_id":"ckkdqtlpl0009e8ulhws1qpp5","tag_id":"ckkdqtlq2000le8ullctm3yjm","_id":"ckkdqtlq4000oe8uly1zcge4u"}],"Tag":[{"name":"嵌入式","_id":"ckkdqtlpj0007e8uloj63shi4"},{"name":"STM32","_id":"ckkdqtlpn000be8ulrihxejde"},{"name":"Keil","_id":"ckkdqtlpt000de8ulxv0djfq2"},{"name":"人工神经网络","_id":"ckkdqtlpy000ge8ul759ou96r"},{"name":"Matlab","_id":"ckkdqtlq1000je8ulcklqsqpz"},{"name":"数据结构与算法","_id":"ckkdqtlq2000le8ullctm3yjm"}]}}